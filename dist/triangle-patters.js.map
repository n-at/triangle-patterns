{"version":3,"file":"triangle-patters.js","mappings":"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","sources":["webpack://triangle-patterns/./node_modules/seedrandom/index.js","webpack://triangle-patterns/./node_modules/seedrandom/lib/alea.js","webpack://triangle-patterns/./node_modules/seedrandom/lib/tychei.js","webpack://triangle-patterns/./node_modules/seedrandom/lib/xor128.js","webpack://triangle-patterns/./node_modules/seedrandom/lib/xor4096.js","webpack://triangle-patterns/./node_modules/seedrandom/lib/xorshift7.js","webpack://triangle-patterns/./node_modules/seedrandom/lib/xorwow.js","webpack://triangle-patterns/./node_modules/seedrandom/seedrandom.js","webpack://triangle-patterns/./node_modules/chroma-js/chroma.js","webpack://triangle-patterns/webpack/bootstrap","webpack://triangle-patterns/webpack/runtime/amd define","webpack://triangle-patterns/webpack/runtime/amd options","webpack://triangle-patterns/webpack/runtime/compat get default export","webpack://triangle-patterns/webpack/runtime/define property getters","webpack://triangle-patterns/webpack/runtime/hasOwnProperty shorthand","webpack://triangle-patterns/webpack/runtime/node module decorator","webpack://triangle-patterns/./node_modules/robust-predicates/esm/util.js","webpack://triangle-patterns/./node_modules/robust-predicates/esm/orient2d.js","webpack://triangle-patterns/./node_modules/robust-predicates/esm/orient3d.js","webpack://triangle-patterns/./node_modules/robust-predicates/esm/incircle.js","webpack://triangle-patterns/./node_modules/robust-predicates/esm/insphere.js","webpack://triangle-patterns/./node_modules/delaunator/index.js","webpack://triangle-patterns/./triangle-patterns.js"],"sourcesContent":["// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2019, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.chroma = factory());\n})(this, (function () { 'use strict';\n\n    var limit$2 = function (x, min, max) {\n        if ( min === void 0 ) min=0;\n        if ( max === void 0 ) max=1;\n\n        return x < min ? min : x > max ? max : x;\n    };\n\n    var limit$1 = limit$2;\n\n    var clip_rgb$3 = function (rgb) {\n        rgb._clipped = false;\n        rgb._unclipped = rgb.slice(0);\n        for (var i=0; i<=3; i++) {\n            if (i < 3) {\n                if (rgb[i] < 0 || rgb[i] > 255) { rgb._clipped = true; }\n                rgb[i] = limit$1(rgb[i], 0, 255);\n            } else if (i === 3) {\n                rgb[i] = limit$1(rgb[i], 0, 1);\n            }\n        }\n        return rgb;\n    };\n\n    // ported from jQuery's $.type\n    var classToType = {};\n    for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {\n        var name = list$1[i$1];\n\n        classToType[(\"[object \" + name + \"]\")] = name.toLowerCase();\n    }\n    var type$p = function(obj) {\n        return classToType[Object.prototype.toString.call(obj)] || \"object\";\n    };\n\n    var type$o = type$p;\n\n    var unpack$B = function (args, keyOrder) {\n        if ( keyOrder === void 0 ) keyOrder=null;\n\n    \t// if called with more than 3 arguments, we return the arguments\n        if (args.length >= 3) { return Array.prototype.slice.call(args); }\n        // with less than 3 args we check if first arg is object\n        // and use the keyOrder string to extract and sort properties\n    \tif (type$o(args[0]) == 'object' && keyOrder) {\n    \t\treturn keyOrder.split('')\n    \t\t\t.filter(function (k) { return args[0][k] !== undefined; })\n    \t\t\t.map(function (k) { return args[0][k]; });\n    \t}\n    \t// otherwise we just return the first argument\n    \t// (which we suppose is an array of args)\n        return args[0];\n    };\n\n    var type$n = type$p;\n\n    var last$4 = function (args) {\n        if (args.length < 2) { return null; }\n        var l = args.length-1;\n        if (type$n(args[l]) == 'string') { return args[l].toLowerCase(); }\n        return null;\n    };\n\n    var PI$2 = Math.PI;\n\n    var utils = {\n    \tclip_rgb: clip_rgb$3,\n    \tlimit: limit$2,\n    \ttype: type$p,\n    \tunpack: unpack$B,\n    \tlast: last$4,\n    \tPI: PI$2,\n    \tTWOPI: PI$2*2,\n    \tPITHIRD: PI$2/3,\n    \tDEG2RAD: PI$2 / 180,\n    \tRAD2DEG: 180 / PI$2\n    };\n\n    var input$h = {\n    \tformat: {},\n    \tautodetect: []\n    };\n\n    var last$3 = utils.last;\n    var clip_rgb$2 = utils.clip_rgb;\n    var type$m = utils.type;\n    var _input = input$h;\n\n    var Color$D = function Color() {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var me = this;\n        if (type$m(args[0]) === 'object' &&\n            args[0].constructor &&\n            args[0].constructor === this.constructor) {\n            // the argument is already a Color instance\n            return args[0];\n        }\n\n        // last argument could be the mode\n        var mode = last$3(args);\n        var autodetect = false;\n\n        if (!mode) {\n            autodetect = true;\n            if (!_input.sorted) {\n                _input.autodetect = _input.autodetect.sort(function (a,b) { return b.p - a.p; });\n                _input.sorted = true;\n            }\n            // auto-detect format\n            for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {\n                var chk = list[i];\n\n                mode = chk.test.apply(chk, args);\n                if (mode) { break; }\n            }\n        }\n\n        if (_input.format[mode]) {\n            var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0,-1));\n            me._rgb = clip_rgb$2(rgb);\n        } else {\n            throw new Error('unknown format: '+args);\n        }\n\n        // add alpha channel\n        if (me._rgb.length === 3) { me._rgb.push(1); }\n    };\n\n    Color$D.prototype.toString = function toString () {\n        if (type$m(this.hex) == 'function') { return this.hex(); }\n        return (\"[\" + (this._rgb.join(',')) + \"]\");\n    };\n\n    var Color_1 = Color$D;\n\n    var chroma$k = function () {\n    \tvar args = [], len = arguments.length;\n    \twhile ( len-- ) args[ len ] = arguments[ len ];\n\n    \treturn new (Function.prototype.bind.apply( chroma$k.Color, [ null ].concat( args) ));\n    };\n\n    chroma$k.Color = Color_1;\n    chroma$k.version = '2.4.2';\n\n    var chroma_1 = chroma$k;\n\n    var unpack$A = utils.unpack;\n    var max$2 = Math.max;\n\n    var rgb2cmyk$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$A(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r = r / 255;\n        g = g / 255;\n        b = b / 255;\n        var k = 1 - max$2(r,max$2(g,b));\n        var f = k < 1 ? 1 / (1-k) : 0;\n        var c = (1-r-k) * f;\n        var m = (1-g-k) * f;\n        var y = (1-b-k) * f;\n        return [c,m,y,k];\n    };\n\n    var rgb2cmyk_1 = rgb2cmyk$1;\n\n    var unpack$z = utils.unpack;\n\n    var cmyk2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$z(args, 'cmyk');\n        var c = args[0];\n        var m = args[1];\n        var y = args[2];\n        var k = args[3];\n        var alpha = args.length > 4 ? args[4] : 1;\n        if (k === 1) { return [0,0,0,alpha]; }\n        return [\n            c >= 1 ? 0 : 255 * (1-c) * (1-k), // r\n            m >= 1 ? 0 : 255 * (1-m) * (1-k), // g\n            y >= 1 ? 0 : 255 * (1-y) * (1-k), // b\n            alpha\n        ];\n    };\n\n    var cmyk2rgb_1 = cmyk2rgb;\n\n    var chroma$j = chroma_1;\n    var Color$C = Color_1;\n    var input$g = input$h;\n    var unpack$y = utils.unpack;\n    var type$l = utils.type;\n\n    var rgb2cmyk = rgb2cmyk_1;\n\n    Color$C.prototype.cmyk = function() {\n        return rgb2cmyk(this._rgb);\n    };\n\n    chroma$j.cmyk = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$C, [ null ].concat( args, ['cmyk']) ));\n    };\n\n    input$g.format.cmyk = cmyk2rgb_1;\n\n    input$g.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$y(args, 'cmyk');\n            if (type$l(args) === 'array' && args.length === 4) {\n                return 'cmyk';\n            }\n        }\n    });\n\n    var unpack$x = utils.unpack;\n    var last$2 = utils.last;\n    var rnd = function (a) { return Math.round(a*100)/100; };\n\n    /*\n     * supported arguments:\n     * - hsl2css(h,s,l)\n     * - hsl2css(h,s,l,a)\n     * - hsl2css([h,s,l], mode)\n     * - hsl2css([h,s,l,a], mode)\n     * - hsl2css({h,s,l,a}, mode)\n     */\n    var hsl2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hsla = unpack$x(args, 'hsla');\n        var mode = last$2(args) || 'lsa';\n        hsla[0] = rnd(hsla[0] || 0);\n        hsla[1] = rnd(hsla[1]*100) + '%';\n        hsla[2] = rnd(hsla[2]*100) + '%';\n        if (mode === 'hsla' || (hsla.length > 3 && hsla[3]<1)) {\n            hsla[3] = hsla.length > 3 ? hsla[3] : 1;\n            mode = 'hsla';\n        } else {\n            hsla.length = 3;\n        }\n        return (mode + \"(\" + (hsla.join(',')) + \")\");\n    };\n\n    var hsl2css_1 = hsl2css$1;\n\n    var unpack$w = utils.unpack;\n\n    /*\n     * supported arguments:\n     * - rgb2hsl(r,g,b)\n     * - rgb2hsl(r,g,b,a)\n     * - rgb2hsl([r,g,b])\n     * - rgb2hsl([r,g,b,a])\n     * - rgb2hsl({r,g,b,a})\n     */\n    var rgb2hsl$3 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$w(args, 'rgba');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n\n        r /= 255;\n        g /= 255;\n        b /= 255;\n\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n\n        var l = (max + min) / 2;\n        var s, h;\n\n        if (max === min){\n            s = 0;\n            h = Number.NaN;\n        } else {\n            s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n        }\n\n        if (r == max) { h = (g - b) / (max - min); }\n        else if (g == max) { h = 2 + (b - r) / (max - min); }\n        else if (b == max) { h = 4 + (r - g) / (max - min); }\n\n        h *= 60;\n        if (h < 0) { h += 360; }\n        if (args.length>3 && args[3]!==undefined) { return [h,s,l,args[3]]; }\n        return [h,s,l];\n    };\n\n    var rgb2hsl_1 = rgb2hsl$3;\n\n    var unpack$v = utils.unpack;\n    var last$1 = utils.last;\n    var hsl2css = hsl2css_1;\n    var rgb2hsl$2 = rgb2hsl_1;\n    var round$6 = Math.round;\n\n    /*\n     * supported arguments:\n     * - rgb2css(r,g,b)\n     * - rgb2css(r,g,b,a)\n     * - rgb2css([r,g,b], mode)\n     * - rgb2css([r,g,b,a], mode)\n     * - rgb2css({r,g,b,a}, mode)\n     */\n    var rgb2css$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$v(args, 'rgba');\n        var mode = last$1(args) || 'rgb';\n        if (mode.substr(0,3) == 'hsl') {\n            return hsl2css(rgb2hsl$2(rgba), mode);\n        }\n        rgba[0] = round$6(rgba[0]);\n        rgba[1] = round$6(rgba[1]);\n        rgba[2] = round$6(rgba[2]);\n        if (mode === 'rgba' || (rgba.length > 3 && rgba[3]<1)) {\n            rgba[3] = rgba.length > 3 ? rgba[3] : 1;\n            mode = 'rgba';\n        }\n        return (mode + \"(\" + (rgba.slice(0,mode==='rgb'?3:4).join(',')) + \")\");\n    };\n\n    var rgb2css_1 = rgb2css$1;\n\n    var unpack$u = utils.unpack;\n    var round$5 = Math.round;\n\n    var hsl2rgb$1 = function () {\n        var assign;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$u(args, 'hsl');\n        var h = args[0];\n        var s = args[1];\n        var l = args[2];\n        var r,g,b;\n        if (s === 0) {\n            r = g = b = l*255;\n        } else {\n            var t3 = [0,0,0];\n            var c = [0,0,0];\n            var t2 = l < 0.5 ? l * (1+s) : l+s-l*s;\n            var t1 = 2 * l - t2;\n            var h_ = h / 360;\n            t3[0] = h_ + 1/3;\n            t3[1] = h_;\n            t3[2] = h_ - 1/3;\n            for (var i=0; i<3; i++) {\n                if (t3[i] < 0) { t3[i] += 1; }\n                if (t3[i] > 1) { t3[i] -= 1; }\n                if (6 * t3[i] < 1)\n                    { c[i] = t1 + (t2 - t1) * 6 * t3[i]; }\n                else if (2 * t3[i] < 1)\n                    { c[i] = t2; }\n                else if (3 * t3[i] < 2)\n                    { c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6; }\n                else\n                    { c[i] = t1; }\n            }\n            (assign = [round$5(c[0]*255),round$5(c[1]*255),round$5(c[2]*255)], r = assign[0], g = assign[1], b = assign[2]);\n        }\n        if (args.length > 3) {\n            // keep alpha channel\n            return [r,g,b,args[3]];\n        }\n        return [r,g,b,1];\n    };\n\n    var hsl2rgb_1 = hsl2rgb$1;\n\n    var hsl2rgb = hsl2rgb_1;\n    var input$f = input$h;\n\n    var RE_RGB = /^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/;\n    var RE_RGBA = /^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_RGB_PCT = /^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_RGBA_PCT = /^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n    var RE_HSL = /^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/;\n    var RE_HSLA = /^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/;\n\n    var round$4 = Math.round;\n\n    var css2rgb$1 = function (css) {\n        css = css.toLowerCase().trim();\n        var m;\n\n        if (input$f.format.named) {\n            try {\n                return input$f.format.named(css);\n            } catch (e) {\n                // eslint-disable-next-line\n            }\n        }\n\n        // rgb(250,20,0)\n        if ((m = css.match(RE_RGB))) {\n            var rgb = m.slice(1,4);\n            for (var i=0; i<3; i++) {\n                rgb[i] = +rgb[i];\n            }\n            rgb[3] = 1;  // default alpha\n            return rgb;\n        }\n\n        // rgba(250,20,0,0.4)\n        if ((m = css.match(RE_RGBA))) {\n            var rgb$1 = m.slice(1,5);\n            for (var i$1=0; i$1<4; i$1++) {\n                rgb$1[i$1] = +rgb$1[i$1];\n            }\n            return rgb$1;\n        }\n\n        // rgb(100%,0%,0%)\n        if ((m = css.match(RE_RGB_PCT))) {\n            var rgb$2 = m.slice(1,4);\n            for (var i$2=0; i$2<3; i$2++) {\n                rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55);\n            }\n            rgb$2[3] = 1;  // default alpha\n            return rgb$2;\n        }\n\n        // rgba(100%,0%,0%,0.4)\n        if ((m = css.match(RE_RGBA_PCT))) {\n            var rgb$3 = m.slice(1,5);\n            for (var i$3=0; i$3<3; i$3++) {\n                rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55);\n            }\n            rgb$3[3] = +rgb$3[3];\n            return rgb$3;\n        }\n\n        // hsl(0,100%,50%)\n        if ((m = css.match(RE_HSL))) {\n            var hsl = m.slice(1,4);\n            hsl[1] *= 0.01;\n            hsl[2] *= 0.01;\n            var rgb$4 = hsl2rgb(hsl);\n            rgb$4[3] = 1;\n            return rgb$4;\n        }\n\n        // hsla(0,100%,50%,0.5)\n        if ((m = css.match(RE_HSLA))) {\n            var hsl$1 = m.slice(1,4);\n            hsl$1[1] *= 0.01;\n            hsl$1[2] *= 0.01;\n            var rgb$5 = hsl2rgb(hsl$1);\n            rgb$5[3] = +m[4];  // default alpha = 1\n            return rgb$5;\n        }\n    };\n\n    css2rgb$1.test = function (s) {\n        return RE_RGB.test(s) ||\n            RE_RGBA.test(s) ||\n            RE_RGB_PCT.test(s) ||\n            RE_RGBA_PCT.test(s) ||\n            RE_HSL.test(s) ||\n            RE_HSLA.test(s);\n    };\n\n    var css2rgb_1 = css2rgb$1;\n\n    var chroma$i = chroma_1;\n    var Color$B = Color_1;\n    var input$e = input$h;\n    var type$k = utils.type;\n\n    var rgb2css = rgb2css_1;\n    var css2rgb = css2rgb_1;\n\n    Color$B.prototype.css = function(mode) {\n        return rgb2css(this._rgb, mode);\n    };\n\n    chroma$i.css = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$B, [ null ].concat( args, ['css']) ));\n    };\n\n    input$e.format.css = css2rgb;\n\n    input$e.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {\n                return 'css';\n            }\n        }\n    });\n\n    var Color$A = Color_1;\n    var chroma$h = chroma_1;\n    var input$d = input$h;\n    var unpack$t = utils.unpack;\n\n    input$d.format.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$t(args, 'rgba');\n        rgb[0] *= 255;\n        rgb[1] *= 255;\n        rgb[2] *= 255;\n        return rgb;\n    };\n\n    chroma$h.gl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$A, [ null ].concat( args, ['gl']) ));\n    };\n\n    Color$A.prototype.gl = function() {\n        var rgb = this._rgb;\n        return [rgb[0]/255, rgb[1]/255, rgb[2]/255, rgb[3]];\n    };\n\n    var unpack$s = utils.unpack;\n\n    var rgb2hcg$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$s(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var min = Math.min(r, g, b);\n        var max = Math.max(r, g, b);\n        var delta = max - min;\n        var c = delta * 100 / 255;\n        var _g = min / (255 - delta) * 100;\n        var h;\n        if (delta === 0) {\n            h = Number.NaN;\n        } else {\n            if (r === max) { h = (g - b) / delta; }\n            if (g === max) { h = 2+(b - r) / delta; }\n            if (b === max) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, c, _g];\n    };\n\n    var rgb2hcg_1 = rgb2hcg$1;\n\n    var unpack$r = utils.unpack;\n    var floor$3 = Math.floor;\n\n    /*\n     * this is basically just HSV with some minor tweaks\n     *\n     * hue.. [0..360]\n     * chroma .. [0..1]\n     * grayness .. [0..1]\n     */\n\n    var hcg2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$r(args, 'hcg');\n        var h = args[0];\n        var c = args[1];\n        var _g = args[2];\n        var r,g,b;\n        _g = _g * 255;\n        var _c = c * 255;\n        if (c === 0) {\n            r = g = b = _g;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n            var i = floor$3(h);\n            var f = h - i;\n            var p = _g * (1 - c);\n            var q = p + _c * (1 - f);\n            var t = p + _c * f;\n            var v = p + _c;\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var hcg2rgb_1 = hcg2rgb;\n\n    var unpack$q = utils.unpack;\n    var type$j = utils.type;\n    var chroma$g = chroma_1;\n    var Color$z = Color_1;\n    var input$c = input$h;\n\n    var rgb2hcg = rgb2hcg_1;\n\n    Color$z.prototype.hcg = function() {\n        return rgb2hcg(this._rgb);\n    };\n\n    chroma$g.hcg = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$z, [ null ].concat( args, ['hcg']) ));\n    };\n\n    input$c.format.hcg = hcg2rgb_1;\n\n    input$c.autodetect.push({\n        p: 1,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$q(args, 'hcg');\n            if (type$j(args) === 'array' && args.length === 3) {\n                return 'hcg';\n            }\n        }\n    });\n\n    var unpack$p = utils.unpack;\n    var last = utils.last;\n    var round$3 = Math.round;\n\n    var rgb2hex$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$p(args, 'rgba');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var a = ref[3];\n        var mode = last(args) || 'auto';\n        if (a === undefined) { a = 1; }\n        if (mode === 'auto') {\n            mode = a < 1 ? 'rgba' : 'rgb';\n        }\n        r = round$3(r);\n        g = round$3(g);\n        b = round$3(b);\n        var u = r << 16 | g << 8 | b;\n        var str = \"000000\" + u.toString(16); //#.toUpperCase();\n        str = str.substr(str.length - 6);\n        var hxa = '0' + round$3(a * 255).toString(16);\n        hxa = hxa.substr(hxa.length - 2);\n        switch (mode.toLowerCase()) {\n            case 'rgba': return (\"#\" + str + hxa);\n            case 'argb': return (\"#\" + hxa + str);\n            default: return (\"#\" + str);\n        }\n    };\n\n    var rgb2hex_1 = rgb2hex$2;\n\n    var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/;\n    var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/;\n\n    var hex2rgb$1 = function (hex) {\n        if (hex.match(RE_HEX)) {\n            // remove optional leading #\n            if (hex.length === 4 || hex.length === 7) {\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full six-digit\n            if (hex.length === 3) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2];\n            }\n            var u = parseInt(hex, 16);\n            var r = u >> 16;\n            var g = u >> 8 & 0xFF;\n            var b = u & 0xFF;\n            return [r,g,b,1];\n        }\n\n        // match rgba hex format, eg #FF000077\n        if (hex.match(RE_HEXA)) {\n            if (hex.length === 5 || hex.length === 9) {\n                // remove optional leading #\n                hex = hex.substr(1);\n            }\n            // expand short-notation to full eight-digit\n            if (hex.length === 4) {\n                hex = hex.split('');\n                hex = hex[0]+hex[0]+hex[1]+hex[1]+hex[2]+hex[2]+hex[3]+hex[3];\n            }\n            var u$1 = parseInt(hex, 16);\n            var r$1 = u$1 >> 24 & 0xFF;\n            var g$1 = u$1 >> 16 & 0xFF;\n            var b$1 = u$1 >> 8 & 0xFF;\n            var a = Math.round((u$1 & 0xFF) / 0xFF * 100) / 100;\n            return [r$1,g$1,b$1,a];\n        }\n\n        // we used to check for css colors here\n        // if _input.css? and rgb = _input.css hex\n        //     return rgb\n\n        throw new Error((\"unknown hex color: \" + hex));\n    };\n\n    var hex2rgb_1 = hex2rgb$1;\n\n    var chroma$f = chroma_1;\n    var Color$y = Color_1;\n    var type$i = utils.type;\n    var input$b = input$h;\n\n    var rgb2hex$1 = rgb2hex_1;\n\n    Color$y.prototype.hex = function(mode) {\n        return rgb2hex$1(this._rgb, mode);\n    };\n\n    chroma$f.hex = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$y, [ null ].concat( args, ['hex']) ));\n    };\n\n    input$b.format.hex = hex2rgb_1;\n    input$b.autodetect.push({\n        p: 4,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$i(h) === 'string' && [3,4,5,6,7,8,9].indexOf(h.length) >= 0) {\n                return 'hex';\n            }\n        }\n    });\n\n    var unpack$o = utils.unpack;\n    var TWOPI$2 = utils.TWOPI;\n    var min$2 = Math.min;\n    var sqrt$4 = Math.sqrt;\n    var acos = Math.acos;\n\n    var rgb2hsi$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n        */\n        var ref = unpack$o(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        var h;\n        var min_ = min$2(r,g,b);\n        var i = (r+g+b) / 3;\n        var s = i > 0 ? 1 - min_/i : 0;\n        if (s === 0) {\n            h = NaN;\n        } else {\n            h = ((r-g)+(r-b)) / 2;\n            h /= sqrt$4((r-g)*(r-g) + (r-b)*(g-b));\n            h = acos(h);\n            if (b > g) {\n                h = TWOPI$2 - h;\n            }\n            h /= TWOPI$2;\n        }\n        return [h*360,s,i];\n    };\n\n    var rgb2hsi_1 = rgb2hsi$1;\n\n    var unpack$n = utils.unpack;\n    var limit = utils.limit;\n    var TWOPI$1 = utils.TWOPI;\n    var PITHIRD = utils.PITHIRD;\n    var cos$4 = Math.cos;\n\n    /*\n     * hue [0..360]\n     * saturation [0..1]\n     * intensity [0..1]\n     */\n    var hsi2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        borrowed from here:\n        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n        */\n        args = unpack$n(args, 'hsi');\n        var h = args[0];\n        var s = args[1];\n        var i = args[2];\n        var r,g,b;\n\n        if (isNaN(h)) { h = 0; }\n        if (isNaN(s)) { s = 0; }\n        // normalize hue\n        if (h > 360) { h -= 360; }\n        if (h < 0) { h += 360; }\n        h /= 360;\n        if (h < 1/3) {\n            b = (1-s)/3;\n            r = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            g = 1 - (b+r);\n        } else if (h < 2/3) {\n            h -= 1/3;\n            r = (1-s)/3;\n            g = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            b = 1 - (r+g);\n        } else {\n            h -= 2/3;\n            g = (1-s)/3;\n            b = (1+s*cos$4(TWOPI$1*h)/cos$4(PITHIRD-TWOPI$1*h))/3;\n            r = 1 - (g+b);\n        }\n        r = limit(i*r*3);\n        g = limit(i*g*3);\n        b = limit(i*b*3);\n        return [r*255, g*255, b*255, args.length > 3 ? args[3] : 1];\n    };\n\n    var hsi2rgb_1 = hsi2rgb;\n\n    var unpack$m = utils.unpack;\n    var type$h = utils.type;\n    var chroma$e = chroma_1;\n    var Color$x = Color_1;\n    var input$a = input$h;\n\n    var rgb2hsi = rgb2hsi_1;\n\n    Color$x.prototype.hsi = function() {\n        return rgb2hsi(this._rgb);\n    };\n\n    chroma$e.hsi = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$x, [ null ].concat( args, ['hsi']) ));\n    };\n\n    input$a.format.hsi = hsi2rgb_1;\n\n    input$a.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$m(args, 'hsi');\n            if (type$h(args) === 'array' && args.length === 3) {\n                return 'hsi';\n            }\n        }\n    });\n\n    var unpack$l = utils.unpack;\n    var type$g = utils.type;\n    var chroma$d = chroma_1;\n    var Color$w = Color_1;\n    var input$9 = input$h;\n\n    var rgb2hsl$1 = rgb2hsl_1;\n\n    Color$w.prototype.hsl = function() {\n        return rgb2hsl$1(this._rgb);\n    };\n\n    chroma$d.hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$w, [ null ].concat( args, ['hsl']) ));\n    };\n\n    input$9.format.hsl = hsl2rgb_1;\n\n    input$9.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$l(args, 'hsl');\n            if (type$g(args) === 'array' && args.length === 3) {\n                return 'hsl';\n            }\n        }\n    });\n\n    var unpack$k = utils.unpack;\n    var min$1 = Math.min;\n    var max$1 = Math.max;\n\n    /*\n     * supported arguments:\n     * - rgb2hsv(r,g,b)\n     * - rgb2hsv([r,g,b])\n     * - rgb2hsv({r,g,b})\n     */\n    var rgb2hsl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$k(args, 'rgb');\n        var r = args[0];\n        var g = args[1];\n        var b = args[2];\n        var min_ = min$1(r, g, b);\n        var max_ = max$1(r, g, b);\n        var delta = max_ - min_;\n        var h,s,v;\n        v = max_ / 255.0;\n        if (max_ === 0) {\n            h = Number.NaN;\n            s = 0;\n        } else {\n            s = delta / max_;\n            if (r === max_) { h = (g - b) / delta; }\n            if (g === max_) { h = 2+(b - r) / delta; }\n            if (b === max_) { h = 4+(r - g) / delta; }\n            h *= 60;\n            if (h < 0) { h += 360; }\n        }\n        return [h, s, v]\n    };\n\n    var rgb2hsv$1 = rgb2hsl;\n\n    var unpack$j = utils.unpack;\n    var floor$2 = Math.floor;\n\n    var hsv2rgb = function () {\n        var assign, assign$1, assign$2, assign$3, assign$4, assign$5;\n\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n        args = unpack$j(args, 'hsv');\n        var h = args[0];\n        var s = args[1];\n        var v = args[2];\n        var r,g,b;\n        v *= 255;\n        if (s === 0) {\n            r = g = b = v;\n        } else {\n            if (h === 360) { h = 0; }\n            if (h > 360) { h -= 360; }\n            if (h < 0) { h += 360; }\n            h /= 60;\n\n            var i = floor$2(h);\n            var f = h - i;\n            var p = v * (1 - s);\n            var q = v * (1 - s * f);\n            var t = v * (1 - s * (1 - f));\n\n            switch (i) {\n                case 0: (assign = [v, t, p], r = assign[0], g = assign[1], b = assign[2]); break\n                case 1: (assign$1 = [q, v, p], r = assign$1[0], g = assign$1[1], b = assign$1[2]); break\n                case 2: (assign$2 = [p, v, t], r = assign$2[0], g = assign$2[1], b = assign$2[2]); break\n                case 3: (assign$3 = [p, q, v], r = assign$3[0], g = assign$3[1], b = assign$3[2]); break\n                case 4: (assign$4 = [t, p, v], r = assign$4[0], g = assign$4[1], b = assign$4[2]); break\n                case 5: (assign$5 = [v, p, q], r = assign$5[0], g = assign$5[1], b = assign$5[2]); break\n            }\n        }\n        return [r,g,b,args.length > 3?args[3]:1];\n    };\n\n    var hsv2rgb_1 = hsv2rgb;\n\n    var unpack$i = utils.unpack;\n    var type$f = utils.type;\n    var chroma$c = chroma_1;\n    var Color$v = Color_1;\n    var input$8 = input$h;\n\n    var rgb2hsv = rgb2hsv$1;\n\n    Color$v.prototype.hsv = function() {\n        return rgb2hsv(this._rgb);\n    };\n\n    chroma$c.hsv = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$v, [ null ].concat( args, ['hsv']) ));\n    };\n\n    input$8.format.hsv = hsv2rgb_1;\n\n    input$8.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$i(args, 'hsv');\n            if (type$f(args) === 'array' && args.length === 3) {\n                return 'hsv';\n            }\n        }\n    });\n\n    var labConstants = {\n        // Corresponds roughly to RGB brighter/darker\n        Kn: 18,\n\n        // D65 standard referent\n        Xn: 0.950470,\n        Yn: 1,\n        Zn: 1.088830,\n\n        t0: 0.137931034,  // 4 / 29\n        t1: 0.206896552,  // 6 / 29\n        t2: 0.12841855,   // 3 * t1 * t1\n        t3: 0.008856452,  // t1 * t1 * t1\n    };\n\n    var LAB_CONSTANTS$3 = labConstants;\n    var unpack$h = utils.unpack;\n    var pow$a = Math.pow;\n\n    var rgb2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$h(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2xyz(r,g,b);\n        var x = ref$1[0];\n        var y = ref$1[1];\n        var z = ref$1[2];\n        var l = 116 * y - 16;\n        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)];\n    };\n\n    var rgb_xyz = function (r) {\n        if ((r /= 255) <= 0.04045) { return r / 12.92; }\n        return pow$a((r + 0.055) / 1.055, 2.4);\n    };\n\n    var xyz_lab = function (t) {\n        if (t > LAB_CONSTANTS$3.t3) { return pow$a(t, 1 / 3); }\n        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0;\n    };\n\n    var rgb2xyz = function (r,g,b) {\n        r = rgb_xyz(r);\n        g = rgb_xyz(g);\n        b = rgb_xyz(b);\n        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn);\n        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / LAB_CONSTANTS$3.Yn);\n        var z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn);\n        return [x,y,z];\n    };\n\n    var rgb2lab_1 = rgb2lab$2;\n\n    var LAB_CONSTANTS$2 = labConstants;\n    var unpack$g = utils.unpack;\n    var pow$9 = Math.pow;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var lab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$g(args, 'lab');\n        var l = args[0];\n        var a = args[1];\n        var b = args[2];\n        var x,y,z, r,g,b_;\n\n        y = (l + 16) / 116;\n        x = isNaN(a) ? y : y + a / 500;\n        z = isNaN(b) ? y : y - b / 200;\n\n        y = LAB_CONSTANTS$2.Yn * lab_xyz(y);\n        x = LAB_CONSTANTS$2.Xn * lab_xyz(x);\n        z = LAB_CONSTANTS$2.Zn * lab_xyz(z);\n\n        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);  // D65 -> sRGB\n        g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n\n        return [r,g,b_,args.length > 3 ? args[3] : 1];\n    };\n\n    var xyz_rgb = function (r) {\n        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)\n    };\n\n    var lab_xyz = function (t) {\n        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)\n    };\n\n    var lab2rgb_1 = lab2rgb$1;\n\n    var unpack$f = utils.unpack;\n    var type$e = utils.type;\n    var chroma$b = chroma_1;\n    var Color$u = Color_1;\n    var input$7 = input$h;\n\n    var rgb2lab$1 = rgb2lab_1;\n\n    Color$u.prototype.lab = function() {\n        return rgb2lab$1(this._rgb);\n    };\n\n    chroma$b.lab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$u, [ null ].concat( args, ['lab']) ));\n    };\n\n    input$7.format.lab = lab2rgb_1;\n\n    input$7.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$f(args, 'lab');\n            if (type$e(args) === 'array' && args.length === 3) {\n                return 'lab';\n            }\n        }\n    });\n\n    var unpack$e = utils.unpack;\n    var RAD2DEG = utils.RAD2DEG;\n    var sqrt$3 = Math.sqrt;\n    var atan2$2 = Math.atan2;\n    var round$2 = Math.round;\n\n    var lab2lch$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$e(args, 'lab');\n        var l = ref[0];\n        var a = ref[1];\n        var b = ref[2];\n        var c = sqrt$3(a * a + b * b);\n        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360;\n        if (round$2(c*10000) === 0) { h = Number.NaN; }\n        return [l, c, h];\n    };\n\n    var lab2lch_1 = lab2lch$2;\n\n    var unpack$d = utils.unpack;\n    var rgb2lab = rgb2lab_1;\n    var lab2lch$1 = lab2lch_1;\n\n    var rgb2lch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$d(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2lab(r,g,b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch$1(l,a,b_);\n    };\n\n    var rgb2lch_1 = rgb2lch$1;\n\n    var unpack$c = utils.unpack;\n    var DEG2RAD = utils.DEG2RAD;\n    var sin$3 = Math.sin;\n    var cos$3 = Math.cos;\n\n    var lch2lab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        /*\n        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n        These formulas were invented by David Dalrymple to obtain maximum contrast without going\n        out of gamut if the parameters are in the range 0-1.\n\n        A saturation multiplier was added by Gregor Aisch\n        */\n        var ref = unpack$c(args, 'lch');\n        var l = ref[0];\n        var c = ref[1];\n        var h = ref[2];\n        if (isNaN(h)) { h = 0; }\n        h = h * DEG2RAD;\n        return [l, cos$3(h) * c, sin$3(h) * c]\n    };\n\n    var lch2lab_1 = lch2lab$2;\n\n    var unpack$b = utils.unpack;\n    var lch2lab$1 = lch2lab_1;\n    var lab2rgb = lab2rgb_1;\n\n    var lch2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$b(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab$1 (l,c,h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = lab2rgb (L,a,b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var lch2rgb_1 = lch2rgb$1;\n\n    var unpack$a = utils.unpack;\n    var lch2rgb = lch2rgb_1;\n\n    var hcl2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var hcl = unpack$a(args, 'hcl').reverse();\n        return lch2rgb.apply(void 0, hcl);\n    };\n\n    var hcl2rgb_1 = hcl2rgb;\n\n    var unpack$9 = utils.unpack;\n    var type$d = utils.type;\n    var chroma$a = chroma_1;\n    var Color$t = Color_1;\n    var input$6 = input$h;\n\n    var rgb2lch = rgb2lch_1;\n\n    Color$t.prototype.lch = function() { return rgb2lch(this._rgb); };\n    Color$t.prototype.hcl = function() { return rgb2lch(this._rgb).reverse(); };\n\n    chroma$a.lch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['lch']) ));\n    };\n    chroma$a.hcl = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$t, [ null ].concat( args, ['hcl']) ));\n    };\n\n    input$6.format.lch = lch2rgb_1;\n    input$6.format.hcl = hcl2rgb_1;\n\n    ['lch','hcl'].forEach(function (m) { return input$6.autodetect.push({\n        p: 2,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$9(args, m);\n            if (type$d(args) === 'array' && args.length === 3) {\n                return m;\n            }\n        }\n    }); });\n\n    /**\n    \tX11 color names\n\n    \thttp://www.w3.org/TR/css3-color/#svg-color\n    */\n\n    var w3cx11$1 = {\n        aliceblue: '#f0f8ff',\n        antiquewhite: '#faebd7',\n        aqua: '#00ffff',\n        aquamarine: '#7fffd4',\n        azure: '#f0ffff',\n        beige: '#f5f5dc',\n        bisque: '#ffe4c4',\n        black: '#000000',\n        blanchedalmond: '#ffebcd',\n        blue: '#0000ff',\n        blueviolet: '#8a2be2',\n        brown: '#a52a2a',\n        burlywood: '#deb887',\n        cadetblue: '#5f9ea0',\n        chartreuse: '#7fff00',\n        chocolate: '#d2691e',\n        coral: '#ff7f50',\n        cornflower: '#6495ed',\n        cornflowerblue: '#6495ed',\n        cornsilk: '#fff8dc',\n        crimson: '#dc143c',\n        cyan: '#00ffff',\n        darkblue: '#00008b',\n        darkcyan: '#008b8b',\n        darkgoldenrod: '#b8860b',\n        darkgray: '#a9a9a9',\n        darkgreen: '#006400',\n        darkgrey: '#a9a9a9',\n        darkkhaki: '#bdb76b',\n        darkmagenta: '#8b008b',\n        darkolivegreen: '#556b2f',\n        darkorange: '#ff8c00',\n        darkorchid: '#9932cc',\n        darkred: '#8b0000',\n        darksalmon: '#e9967a',\n        darkseagreen: '#8fbc8f',\n        darkslateblue: '#483d8b',\n        darkslategray: '#2f4f4f',\n        darkslategrey: '#2f4f4f',\n        darkturquoise: '#00ced1',\n        darkviolet: '#9400d3',\n        deeppink: '#ff1493',\n        deepskyblue: '#00bfff',\n        dimgray: '#696969',\n        dimgrey: '#696969',\n        dodgerblue: '#1e90ff',\n        firebrick: '#b22222',\n        floralwhite: '#fffaf0',\n        forestgreen: '#228b22',\n        fuchsia: '#ff00ff',\n        gainsboro: '#dcdcdc',\n        ghostwhite: '#f8f8ff',\n        gold: '#ffd700',\n        goldenrod: '#daa520',\n        gray: '#808080',\n        green: '#008000',\n        greenyellow: '#adff2f',\n        grey: '#808080',\n        honeydew: '#f0fff0',\n        hotpink: '#ff69b4',\n        indianred: '#cd5c5c',\n        indigo: '#4b0082',\n        ivory: '#fffff0',\n        khaki: '#f0e68c',\n        laserlemon: '#ffff54',\n        lavender: '#e6e6fa',\n        lavenderblush: '#fff0f5',\n        lawngreen: '#7cfc00',\n        lemonchiffon: '#fffacd',\n        lightblue: '#add8e6',\n        lightcoral: '#f08080',\n        lightcyan: '#e0ffff',\n        lightgoldenrod: '#fafad2',\n        lightgoldenrodyellow: '#fafad2',\n        lightgray: '#d3d3d3',\n        lightgreen: '#90ee90',\n        lightgrey: '#d3d3d3',\n        lightpink: '#ffb6c1',\n        lightsalmon: '#ffa07a',\n        lightseagreen: '#20b2aa',\n        lightskyblue: '#87cefa',\n        lightslategray: '#778899',\n        lightslategrey: '#778899',\n        lightsteelblue: '#b0c4de',\n        lightyellow: '#ffffe0',\n        lime: '#00ff00',\n        limegreen: '#32cd32',\n        linen: '#faf0e6',\n        magenta: '#ff00ff',\n        maroon: '#800000',\n        maroon2: '#7f0000',\n        maroon3: '#b03060',\n        mediumaquamarine: '#66cdaa',\n        mediumblue: '#0000cd',\n        mediumorchid: '#ba55d3',\n        mediumpurple: '#9370db',\n        mediumseagreen: '#3cb371',\n        mediumslateblue: '#7b68ee',\n        mediumspringgreen: '#00fa9a',\n        mediumturquoise: '#48d1cc',\n        mediumvioletred: '#c71585',\n        midnightblue: '#191970',\n        mintcream: '#f5fffa',\n        mistyrose: '#ffe4e1',\n        moccasin: '#ffe4b5',\n        navajowhite: '#ffdead',\n        navy: '#000080',\n        oldlace: '#fdf5e6',\n        olive: '#808000',\n        olivedrab: '#6b8e23',\n        orange: '#ffa500',\n        orangered: '#ff4500',\n        orchid: '#da70d6',\n        palegoldenrod: '#eee8aa',\n        palegreen: '#98fb98',\n        paleturquoise: '#afeeee',\n        palevioletred: '#db7093',\n        papayawhip: '#ffefd5',\n        peachpuff: '#ffdab9',\n        peru: '#cd853f',\n        pink: '#ffc0cb',\n        plum: '#dda0dd',\n        powderblue: '#b0e0e6',\n        purple: '#800080',\n        purple2: '#7f007f',\n        purple3: '#a020f0',\n        rebeccapurple: '#663399',\n        red: '#ff0000',\n        rosybrown: '#bc8f8f',\n        royalblue: '#4169e1',\n        saddlebrown: '#8b4513',\n        salmon: '#fa8072',\n        sandybrown: '#f4a460',\n        seagreen: '#2e8b57',\n        seashell: '#fff5ee',\n        sienna: '#a0522d',\n        silver: '#c0c0c0',\n        skyblue: '#87ceeb',\n        slateblue: '#6a5acd',\n        slategray: '#708090',\n        slategrey: '#708090',\n        snow: '#fffafa',\n        springgreen: '#00ff7f',\n        steelblue: '#4682b4',\n        tan: '#d2b48c',\n        teal: '#008080',\n        thistle: '#d8bfd8',\n        tomato: '#ff6347',\n        turquoise: '#40e0d0',\n        violet: '#ee82ee',\n        wheat: '#f5deb3',\n        white: '#ffffff',\n        whitesmoke: '#f5f5f5',\n        yellow: '#ffff00',\n        yellowgreen: '#9acd32'\n    };\n\n    var w3cx11_1 = w3cx11$1;\n\n    var Color$s = Color_1;\n    var input$5 = input$h;\n    var type$c = utils.type;\n\n    var w3cx11 = w3cx11_1;\n    var hex2rgb = hex2rgb_1;\n    var rgb2hex = rgb2hex_1;\n\n    Color$s.prototype.name = function() {\n        var hex = rgb2hex(this._rgb, 'rgb');\n        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {\n            var n = list[i];\n\n            if (w3cx11[n] === hex) { return n.toLowerCase(); }\n        }\n        return hex;\n    };\n\n    input$5.format.named = function (name) {\n        name = name.toLowerCase();\n        if (w3cx11[name]) { return hex2rgb(w3cx11[name]); }\n        throw new Error('unknown color name: '+name);\n    };\n\n    input$5.autodetect.push({\n        p: 5,\n        test: function (h) {\n            var rest = [], len = arguments.length - 1;\n            while ( len-- > 0 ) rest[ len ] = arguments[ len + 1 ];\n\n            if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {\n                return 'named';\n            }\n        }\n    });\n\n    var unpack$8 = utils.unpack;\n\n    var rgb2num$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$8(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        return (r << 16) + (g << 8) + b;\n    };\n\n    var rgb2num_1 = rgb2num$1;\n\n    var type$b = utils.type;\n\n    var num2rgb = function (num) {\n        if (type$b(num) == \"number\" && num >= 0 && num <= 0xFFFFFF) {\n            var r = num >> 16;\n            var g = (num >> 8) & 0xFF;\n            var b = num & 0xFF;\n            return [r,g,b,1];\n        }\n        throw new Error(\"unknown num color: \"+num);\n    };\n\n    var num2rgb_1 = num2rgb;\n\n    var chroma$9 = chroma_1;\n    var Color$r = Color_1;\n    var input$4 = input$h;\n    var type$a = utils.type;\n\n    var rgb2num = rgb2num_1;\n\n    Color$r.prototype.num = function() {\n        return rgb2num(this._rgb);\n    };\n\n    chroma$9.num = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$r, [ null ].concat( args, ['num']) ));\n    };\n\n    input$4.format.num = num2rgb_1;\n\n    input$4.autodetect.push({\n        p: 5,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xFFFFFF) {\n                return 'num';\n            }\n        }\n    });\n\n    var chroma$8 = chroma_1;\n    var Color$q = Color_1;\n    var input$3 = input$h;\n    var unpack$7 = utils.unpack;\n    var type$9 = utils.type;\n    var round$1 = Math.round;\n\n    Color$q.prototype.rgb = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        if (rnd === false) { return this._rgb.slice(0,3); }\n        return this._rgb.slice(0,3).map(round$1);\n    };\n\n    Color$q.prototype.rgba = function(rnd) {\n        if ( rnd === void 0 ) rnd=true;\n\n        return this._rgb.slice(0,4).map(function (v,i) {\n            return i<3 ? (rnd === false ? v : round$1(v)) : v;\n        });\n    };\n\n    chroma$8.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$q, [ null ].concat( args, ['rgb']) ));\n    };\n\n    input$3.format.rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgba = unpack$7(args, 'rgba');\n        if (rgba[3] === undefined) { rgba[3] = 1; }\n        return rgba;\n    };\n\n    input$3.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$7(args, 'rgba');\n            if (type$9(args) === 'array' && (args.length === 3 ||\n                args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1)) {\n                return 'rgb';\n            }\n        }\n    });\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     */\n\n    var log$1 = Math.log;\n\n    var temperature2rgb$1 = function (kelvin) {\n        var temp = kelvin / 100;\n        var r,g,b;\n        if (temp < 66) {\n            r = 255;\n            g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp-2) + 104.49216199393888 * log$1(g);\n            b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp-10) + 115.67994401066147 * log$1(b);\n        } else {\n            r = 351.97690566805693 + 0.114206453784165 * (r = temp-55) - 40.25366309332127 * log$1(r);\n            g = 325.4494125711974 + 0.07943456536662342 * (g = temp-50) - 28.0852963507957 * log$1(g);\n            b = 255;\n        }\n        return [r,g,b,1];\n    };\n\n    var temperature2rgb_1 = temperature2rgb$1;\n\n    /*\n     * Based on implementation by Neil Bartlett\n     * https://github.com/neilbartlett/color-temperature\n     **/\n\n    var temperature2rgb = temperature2rgb_1;\n    var unpack$6 = utils.unpack;\n    var round = Math.round;\n\n    var rgb2temperature$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var rgb = unpack$6(args, 'rgb');\n        var r = rgb[0], b = rgb[2];\n        var minTemp = 1000;\n        var maxTemp = 40000;\n        var eps = 0.4;\n        var temp;\n        while (maxTemp - minTemp > eps) {\n            temp = (maxTemp + minTemp) * 0.5;\n            var rgb$1 = temperature2rgb(temp);\n            if ((rgb$1[2] / rgb$1[0]) >= (b / r)) {\n                maxTemp = temp;\n            } else {\n                minTemp = temp;\n            }\n        }\n        return round(temp);\n    };\n\n    var rgb2temperature_1 = rgb2temperature$1;\n\n    var chroma$7 = chroma_1;\n    var Color$p = Color_1;\n    var input$2 = input$h;\n\n    var rgb2temperature = rgb2temperature_1;\n\n    Color$p.prototype.temp =\n    Color$p.prototype.kelvin =\n    Color$p.prototype.temperature = function() {\n        return rgb2temperature(this._rgb);\n    };\n\n    chroma$7.temp =\n    chroma$7.kelvin =\n    chroma$7.temperature = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$p, [ null ].concat( args, ['temp']) ));\n    };\n\n    input$2.format.temp =\n    input$2.format.kelvin =\n    input$2.format.temperature = temperature2rgb_1;\n\n    var unpack$5 = utils.unpack;\n    var cbrt = Math.cbrt;\n    var pow$8 = Math.pow;\n    var sign$1 = Math.sign;\n\n    var rgb2oklab$2 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        // OKLab color space implementation taken from\n        // https://bottosson.github.io/posts/oklab/\n        var ref = unpack$5(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)];\n        var lr = ref$1[0];\n        var lg = ref$1[1];\n        var lb = ref$1[2];\n        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb);\n        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb);\n        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb);\n\n        return [\n            0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s,\n            1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s,\n            0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s\n        ];\n    };\n\n    var rgb2oklab_1 = rgb2oklab$2;\n\n    function rgb2lrgb(c) {\n        var abs = Math.abs(c);\n        if (abs < 0.04045) {\n            return c / 12.92;\n        }\n        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4);\n    }\n\n    var unpack$4 = utils.unpack;\n    var pow$7 = Math.pow;\n    var sign = Math.sign;\n\n    /*\n     * L* [0..100]\n     * a [-100..100]\n     * b [-100..100]\n     */\n    var oklab2rgb$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$4(args, 'lab');\n        var L = args[0];\n        var a = args[1];\n        var b = args[2];\n\n        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3);\n        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3);\n        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3);\n\n        return [\n            255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),\n            255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),\n            255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),\n            args.length > 3 ? args[3] : 1\n        ];\n    };\n\n    var oklab2rgb_1 = oklab2rgb$1;\n\n    function lrgb2rgb(c) {\n        var abs = Math.abs(c);\n        if (abs > 0.0031308) {\n            return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055);\n        }\n        return c * 12.92;\n    }\n\n    var unpack$3 = utils.unpack;\n    var type$8 = utils.type;\n    var chroma$6 = chroma_1;\n    var Color$o = Color_1;\n    var input$1 = input$h;\n\n    var rgb2oklab$1 = rgb2oklab_1;\n\n    Color$o.prototype.oklab = function () {\n        return rgb2oklab$1(this._rgb);\n    };\n\n    chroma$6.oklab = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$o, [ null ].concat( args, ['oklab']) ));\n    };\n\n    input$1.format.oklab = oklab2rgb_1;\n\n    input$1.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack$3(args, 'oklab');\n            if (type$8(args) === 'array' && args.length === 3) {\n                return 'oklab';\n            }\n        }\n    });\n\n    var unpack$2 = utils.unpack;\n    var rgb2oklab = rgb2oklab_1;\n    var lab2lch = lab2lch_1;\n\n    var rgb2oklch$1 = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        var ref = unpack$2(args, 'rgb');\n        var r = ref[0];\n        var g = ref[1];\n        var b = ref[2];\n        var ref$1 = rgb2oklab(r, g, b);\n        var l = ref$1[0];\n        var a = ref$1[1];\n        var b_ = ref$1[2];\n        return lab2lch(l, a, b_);\n    };\n\n    var rgb2oklch_1 = rgb2oklch$1;\n\n    var unpack$1 = utils.unpack;\n    var lch2lab = lch2lab_1;\n    var oklab2rgb = oklab2rgb_1;\n\n    var oklch2rgb = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        args = unpack$1(args, 'lch');\n        var l = args[0];\n        var c = args[1];\n        var h = args[2];\n        var ref = lch2lab(l, c, h);\n        var L = ref[0];\n        var a = ref[1];\n        var b_ = ref[2];\n        var ref$1 = oklab2rgb(L, a, b_);\n        var r = ref$1[0];\n        var g = ref$1[1];\n        var b = ref$1[2];\n        return [r, g, b, args.length > 3 ? args[3] : 1];\n    };\n\n    var oklch2rgb_1 = oklch2rgb;\n\n    var unpack = utils.unpack;\n    var type$7 = utils.type;\n    var chroma$5 = chroma_1;\n    var Color$n = Color_1;\n    var input = input$h;\n\n    var rgb2oklch = rgb2oklch_1;\n\n    Color$n.prototype.oklch = function () {\n        return rgb2oklch(this._rgb);\n    };\n\n    chroma$5.oklch = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        return new (Function.prototype.bind.apply( Color$n, [ null ].concat( args, ['oklch']) ));\n    };\n\n    input.format.oklch = oklch2rgb_1;\n\n    input.autodetect.push({\n        p: 3,\n        test: function () {\n            var args = [], len = arguments.length;\n            while ( len-- ) args[ len ] = arguments[ len ];\n\n            args = unpack(args, 'oklch');\n            if (type$7(args) === 'array' && args.length === 3) {\n                return 'oklch';\n            }\n        }\n    });\n\n    var Color$m = Color_1;\n    var type$6 = utils.type;\n\n    Color$m.prototype.alpha = function(a, mutate) {\n        if ( mutate === void 0 ) mutate=false;\n\n        if (a !== undefined && type$6(a) === 'number') {\n            if (mutate) {\n                this._rgb[3] = a;\n                return this;\n            }\n            return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb');\n        }\n        return this._rgb[3];\n    };\n\n    var Color$l = Color_1;\n\n    Color$l.prototype.clipped = function() {\n        return this._rgb._clipped || false;\n    };\n\n    var Color$k = Color_1;\n    var LAB_CONSTANTS$1 = labConstants;\n\n    Color$k.prototype.darken = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lab = me.lab();\n    \tlab[0] -= LAB_CONSTANTS$1.Kn * amount;\n    \treturn new Color$k(lab, 'lab').alpha(me.alpha(), true);\n    };\n\n    Color$k.prototype.brighten = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.darken(-amount);\n    };\n\n    Color$k.prototype.darker = Color$k.prototype.darken;\n    Color$k.prototype.brighter = Color$k.prototype.brighten;\n\n    var Color$j = Color_1;\n\n    Color$j.prototype.get = function (mc) {\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) { return src[i]; }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$i = Color_1;\n    var type$5 = utils.type;\n    var pow$6 = Math.pow;\n\n    var EPS = 1e-7;\n    var MAX_ITER = 20;\n\n    Color$i.prototype.luminance = function(lum) {\n        if (lum !== undefined && type$5(lum) === 'number') {\n            if (lum === 0) {\n                // return pure black\n                return new Color$i([0,0,0,this._rgb[3]], 'rgb');\n            }\n            if (lum === 1) {\n                // return pure white\n                return new Color$i([255,255,255,this._rgb[3]], 'rgb');\n            }\n            // compute new color using...\n            var cur_lum = this.luminance();\n            var mode = 'rgb';\n            var max_iter = MAX_ITER;\n\n            var test = function (low, high) {\n                var mid = low.interpolate(high, 0.5, mode);\n                var lm = mid.luminance();\n                if (Math.abs(lum - lm) < EPS || !max_iter--) {\n                    // close enough\n                    return mid;\n                }\n                return lm > lum ? test(low, mid) : test(mid, high);\n            };\n\n            var rgb = (cur_lum > lum ? test(new Color$i([0,0,0]), this) : test(this, new Color$i([255,255,255]))).rgb();\n            return new Color$i(rgb.concat( [this._rgb[3]]));\n        }\n        return rgb2luminance.apply(void 0, (this._rgb).slice(0,3));\n    };\n\n\n    var rgb2luminance = function (r,g,b) {\n        // relative luminance\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n        r = luminance_x(r);\n        g = luminance_x(g);\n        b = luminance_x(b);\n        return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n    };\n\n    var luminance_x = function (x) {\n        x /= 255;\n        return x <= 0.03928 ? x/12.92 : pow$6((x+0.055)/1.055, 2.4);\n    };\n\n    var interpolator$1 = {};\n\n    var Color$h = Color_1;\n    var type$4 = utils.type;\n    var interpolator = interpolator$1;\n\n    var mix$1 = function (col1, col2, f) {\n        if ( f === void 0 ) f=0.5;\n        var rest = [], len = arguments.length - 3;\n        while ( len-- > 0 ) rest[ len ] = arguments[ len + 3 ];\n\n        var mode = rest[0] || 'lrgb';\n        if (!interpolator[mode] && !rest.length) {\n            // fall back to the first supported mode\n            mode = Object.keys(interpolator)[0];\n        }\n        if (!interpolator[mode]) {\n            throw new Error((\"interpolation mode \" + mode + \" is not defined\"));\n        }\n        if (type$4(col1) !== 'object') { col1 = new Color$h(col1); }\n        if (type$4(col2) !== 'object') { col2 = new Color$h(col2); }\n        return interpolator[mode](col1, col2, f)\n            .alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()));\n    };\n\n    var Color$g = Color_1;\n    var mix = mix$1;\n\n    Color$g.prototype.mix =\n    Color$g.prototype.interpolate = function(col2, f) {\n    \tif ( f === void 0 ) f=0.5;\n    \tvar rest = [], len = arguments.length - 2;\n    \twhile ( len-- > 0 ) rest[ len ] = arguments[ len + 2 ];\n\n    \treturn mix.apply(void 0, [ this, col2, f ].concat( rest ));\n    };\n\n    var Color$f = Color_1;\n\n    Color$f.prototype.premultiply = function(mutate) {\n    \tif ( mutate === void 0 ) mutate=false;\n\n    \tvar rgb = this._rgb;\n    \tvar a = rgb[3];\n    \tif (mutate) {\n    \t\tthis._rgb = [rgb[0]*a, rgb[1]*a, rgb[2]*a, a];\n    \t\treturn this;\n    \t} else {\n    \t\treturn new Color$f([rgb[0]*a, rgb[1]*a, rgb[2]*a, a], 'rgb');\n    \t}\n    };\n\n    var Color$e = Color_1;\n    var LAB_CONSTANTS = labConstants;\n\n    Color$e.prototype.saturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \tvar me = this;\n    \tvar lch = me.lch();\n    \tlch[1] += LAB_CONSTANTS.Kn * amount;\n    \tif (lch[1] < 0) { lch[1] = 0; }\n    \treturn new Color$e(lch, 'lch').alpha(me.alpha(), true);\n    };\n\n    Color$e.prototype.desaturate = function(amount) {\n    \tif ( amount === void 0 ) amount=1;\n\n    \treturn this.saturate(-amount);\n    };\n\n    var Color$d = Color_1;\n    var type$3 = utils.type;\n\n    Color$d.prototype.set = function (mc, value, mutate) {\n        if ( mutate === void 0 ) mutate = false;\n\n        var ref = mc.split('.');\n        var mode = ref[0];\n        var channel = ref[1];\n        var src = this[mode]();\n        if (channel) {\n            var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0);\n            if (i > -1) {\n                if (type$3(value) == 'string') {\n                    switch (value.charAt(0)) {\n                        case '+':\n                            src[i] += +value;\n                            break;\n                        case '-':\n                            src[i] += +value;\n                            break;\n                        case '*':\n                            src[i] *= +value.substr(1);\n                            break;\n                        case '/':\n                            src[i] /= +value.substr(1);\n                            break;\n                        default:\n                            src[i] = +value;\n                    }\n                } else if (type$3(value) === 'number') {\n                    src[i] = value;\n                } else {\n                    throw new Error(\"unsupported value for Color.set\");\n                }\n                var out = new Color$d(src, mode);\n                if (mutate) {\n                    this._rgb = out._rgb;\n                    return this;\n                }\n                return out;\n            }\n            throw new Error((\"unknown channel \" + channel + \" in mode \" + mode));\n        } else {\n            return src;\n        }\n    };\n\n    var Color$c = Color_1;\n\n    var rgb = function (col1, col2, f) {\n        var xyz0 = col1._rgb;\n        var xyz1 = col2._rgb;\n        return new Color$c(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.rgb = rgb;\n\n    var Color$b = Color_1;\n    var sqrt$2 = Math.sqrt;\n    var pow$5 = Math.pow;\n\n    var lrgb = function (col1, col2, f) {\n        var ref = col1._rgb;\n        var x1 = ref[0];\n        var y1 = ref[1];\n        var z1 = ref[2];\n        var ref$1 = col2._rgb;\n        var x2 = ref$1[0];\n        var y2 = ref$1[1];\n        var z2 = ref$1[2];\n        return new Color$b(\n            sqrt$2(pow$5(x1,2) * (1-f) + pow$5(x2,2) * f),\n            sqrt$2(pow$5(y1,2) * (1-f) + pow$5(y2,2) * f),\n            sqrt$2(pow$5(z1,2) * (1-f) + pow$5(z2,2) * f),\n            'rgb'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lrgb = lrgb;\n\n    var Color$a = Color_1;\n\n    var lab = function (col1, col2, f) {\n        var xyz0 = col1.lab();\n        var xyz1 = col2.lab();\n        return new Color$a(\n            xyz0[0] + f * (xyz1[0]-xyz0[0]),\n            xyz0[1] + f * (xyz1[1]-xyz0[1]),\n            xyz0[2] + f * (xyz1[2]-xyz0[2]),\n            'lab'\n        )\n    };\n\n    // register interpolator\n    interpolator$1.lab = lab;\n\n    var Color$9 = Color_1;\n\n    var _hsx = function (col1, col2, f, m) {\n        var assign, assign$1;\n\n        var xyz0, xyz1;\n        if (m === 'hsl') {\n            xyz0 = col1.hsl();\n            xyz1 = col2.hsl();\n        } else if (m === 'hsv') {\n            xyz0 = col1.hsv();\n            xyz1 = col2.hsv();\n        } else if (m === 'hcg') {\n            xyz0 = col1.hcg();\n            xyz1 = col2.hcg();\n        } else if (m === 'hsi') {\n            xyz0 = col1.hsi();\n            xyz1 = col2.hsi();\n        } else if (m === 'lch' || m === 'hcl') {\n            m = 'hcl';\n            xyz0 = col1.hcl();\n            xyz1 = col2.hcl();\n        } else if (m === 'oklch') {\n            xyz0 = col1.oklch().reverse();\n            xyz1 = col2.oklch().reverse();\n        }\n\n        var hue0, hue1, sat0, sat1, lbv0, lbv1;\n        if (m.substr(0, 1) === 'h' || m === 'oklch') {\n            (assign = xyz0, hue0 = assign[0], sat0 = assign[1], lbv0 = assign[2]);\n            (assign$1 = xyz1, hue1 = assign$1[0], sat1 = assign$1[1], lbv1 = assign$1[2]);\n        }\n\n        var sat, hue, lbv, dh;\n\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n            // both colors have hue\n            if (hue1 > hue0 && hue1 - hue0 > 180) {\n                dh = hue1 - (hue0 + 360);\n            } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n                dh = hue1 + 360 - hue0;\n            } else {\n                dh = hue1 - hue0;\n            }\n            hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n            hue = hue0;\n            if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') { sat = sat0; }\n        } else if (!isNaN(hue1)) {\n            hue = hue1;\n            if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') { sat = sat1; }\n        } else {\n            hue = Number.NaN;\n        }\n\n        if (sat === undefined) { sat = sat0 + f * (sat1 - sat0); }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m);\n    };\n\n    var interpolate_hsx$5 = _hsx;\n\n    var lch = function (col1, col2, f) {\n    \treturn interpolate_hsx$5(col1, col2, f, 'lch');\n    };\n\n    // register interpolator\n    interpolator$1.lch = lch;\n    interpolator$1.hcl = lch;\n\n    var Color$8 = Color_1;\n\n    var num = function (col1, col2, f) {\n        var c1 = col1.num();\n        var c2 = col2.num();\n        return new Color$8(c1 + f * (c2-c1), 'num')\n    };\n\n    // register interpolator\n    interpolator$1.num = num;\n\n    var interpolate_hsx$4 = _hsx;\n\n    var hcg = function (col1, col2, f) {\n    \treturn interpolate_hsx$4(col1, col2, f, 'hcg');\n    };\n\n    // register interpolator\n    interpolator$1.hcg = hcg;\n\n    var interpolate_hsx$3 = _hsx;\n\n    var hsi = function (col1, col2, f) {\n    \treturn interpolate_hsx$3(col1, col2, f, 'hsi');\n    };\n\n    // register interpolator\n    interpolator$1.hsi = hsi;\n\n    var interpolate_hsx$2 = _hsx;\n\n    var hsl = function (col1, col2, f) {\n    \treturn interpolate_hsx$2(col1, col2, f, 'hsl');\n    };\n\n    // register interpolator\n    interpolator$1.hsl = hsl;\n\n    var interpolate_hsx$1 = _hsx;\n\n    var hsv = function (col1, col2, f) {\n    \treturn interpolate_hsx$1(col1, col2, f, 'hsv');\n    };\n\n    // register interpolator\n    interpolator$1.hsv = hsv;\n\n    var Color$7 = Color_1;\n\n    var oklab = function (col1, col2, f) {\n        var xyz0 = col1.oklab();\n        var xyz1 = col2.oklab();\n        return new Color$7(\n            xyz0[0] + f * (xyz1[0] - xyz0[0]),\n            xyz0[1] + f * (xyz1[1] - xyz0[1]),\n            xyz0[2] + f * (xyz1[2] - xyz0[2]),\n            'oklab'\n        );\n    };\n\n    // register interpolator\n    interpolator$1.oklab = oklab;\n\n    var interpolate_hsx = _hsx;\n\n    var oklch = function (col1, col2, f) {\n        return interpolate_hsx(col1, col2, f, 'oklch');\n    };\n\n    // register interpolator\n    interpolator$1.oklch = oklch;\n\n    var Color$6 = Color_1;\n    var clip_rgb$1 = utils.clip_rgb;\n    var pow$4 = Math.pow;\n    var sqrt$1 = Math.sqrt;\n    var PI$1 = Math.PI;\n    var cos$2 = Math.cos;\n    var sin$2 = Math.sin;\n    var atan2$1 = Math.atan2;\n\n    var average = function (colors, mode, weights) {\n        if ( mode === void 0 ) mode='lrgb';\n        if ( weights === void 0 ) weights=null;\n\n        var l = colors.length;\n        if (!weights) { weights = Array.from(new Array(l)).map(function () { return 1; }); }\n        // normalize weights\n        var k = l / weights.reduce(function(a, b) { return a + b; });\n        weights.forEach(function (w,i) { weights[i] *= k; });\n        // convert colors to Color objects\n        colors = colors.map(function (c) { return new Color$6(c); });\n        if (mode === 'lrgb') {\n            return _average_lrgb(colors, weights)\n        }\n        var first = colors.shift();\n        var xyz = first.get(mode);\n        var cnt = [];\n        var dx = 0;\n        var dy = 0;\n        // initial color\n        for (var i=0; i<xyz.length; i++) {\n            xyz[i] = (xyz[i] || 0) * weights[0];\n            cnt.push(isNaN(xyz[i]) ? 0 : weights[0]);\n            if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {\n                var A = xyz[i] / 180 * PI$1;\n                dx += cos$2(A) * weights[0];\n                dy += sin$2(A) * weights[0];\n            }\n        }\n\n        var alpha = first.alpha() * weights[0];\n        colors.forEach(function (c,ci) {\n            var xyz2 = c.get(mode);\n            alpha += c.alpha() * weights[ci+1];\n            for (var i=0; i<xyz.length; i++) {\n                if (!isNaN(xyz2[i])) {\n                    cnt[i] += weights[ci+1];\n                    if (mode.charAt(i) === 'h') {\n                        var A = xyz2[i] / 180 * PI$1;\n                        dx += cos$2(A) * weights[ci+1];\n                        dy += sin$2(A) * weights[ci+1];\n                    } else {\n                        xyz[i] += xyz2[i] * weights[ci+1];\n                    }\n                }\n            }\n        });\n\n        for (var i$1=0; i$1<xyz.length; i$1++) {\n            if (mode.charAt(i$1) === 'h') {\n                var A$1 = atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1 * 180;\n                while (A$1 < 0) { A$1 += 360; }\n                while (A$1 >= 360) { A$1 -= 360; }\n                xyz[i$1] = A$1;\n            } else {\n                xyz[i$1] = xyz[i$1]/cnt[i$1];\n            }\n        }\n        alpha /= l;\n        return (new Color$6(xyz, mode)).alpha(alpha > 0.99999 ? 1 : alpha, true);\n    };\n\n\n    var _average_lrgb = function (colors, weights) {\n        var l = colors.length;\n        var xyz = [0,0,0,0];\n        for (var i=0; i < colors.length; i++) {\n            var col = colors[i];\n            var f = weights[i] / l;\n            var rgb = col._rgb;\n            xyz[0] += pow$4(rgb[0],2) * f;\n            xyz[1] += pow$4(rgb[1],2) * f;\n            xyz[2] += pow$4(rgb[2],2) * f;\n            xyz[3] += rgb[3] * f;\n        }\n        xyz[0] = sqrt$1(xyz[0]);\n        xyz[1] = sqrt$1(xyz[1]);\n        xyz[2] = sqrt$1(xyz[2]);\n        if (xyz[3] > 0.9999999) { xyz[3] = 1; }\n        return new Color$6(clip_rgb$1(xyz));\n    };\n\n    // minimal multi-purpose interface\n\n    // @requires utils color analyze\n\n    var chroma$4 = chroma_1;\n    var type$2 = utils.type;\n\n    var pow$3 = Math.pow;\n\n    var scale$2 = function(colors) {\n\n        // constructor\n        var _mode = 'rgb';\n        var _nacol = chroma$4('#ccc');\n        var _spread = 0;\n        // const _fixed = false;\n        var _domain = [0, 1];\n        var _pos = [];\n        var _padding = [0,0];\n        var _classes = false;\n        var _colors = [];\n        var _out = false;\n        var _min = 0;\n        var _max = 1;\n        var _correctLightness = false;\n        var _colorCache = {};\n        var _useCache = true;\n        var _gamma = 1;\n\n        // private methods\n\n        var setColors = function(colors) {\n            colors = colors || ['#fff', '#000'];\n            if (colors && type$2(colors) === 'string' && chroma$4.brewer &&\n                chroma$4.brewer[colors.toLowerCase()]) {\n                colors = chroma$4.brewer[colors.toLowerCase()];\n            }\n            if (type$2(colors) === 'array') {\n                // handle single color\n                if (colors.length === 1) {\n                    colors = [colors[0], colors[0]];\n                }\n                // make a copy of the colors\n                colors = colors.slice(0);\n                // convert to chroma classes\n                for (var c=0; c<colors.length; c++) {\n                    colors[c] = chroma$4(colors[c]);\n                }\n                // auto-fill color position\n                _pos.length = 0;\n                for (var c$1=0; c$1<colors.length; c$1++) {\n                    _pos.push(c$1/(colors.length-1));\n                }\n            }\n            resetCache();\n            return _colors = colors;\n        };\n\n        var getClass = function(value) {\n            if (_classes != null) {\n                var n = _classes.length-1;\n                var i = 0;\n                while (i < n && value >= _classes[i]) {\n                    i++;\n                }\n                return i-1;\n            }\n            return 0;\n        };\n\n        var tMapLightness = function (t) { return t; };\n        var tMapDomain = function (t) { return t; };\n\n        // const classifyValue = function(value) {\n        //     let val = value;\n        //     if (_classes.length > 2) {\n        //         const n = _classes.length-1;\n        //         const i = getClass(value);\n        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class\n        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class\n        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));\n        //     }\n        //     return val;\n        // };\n\n        var getColor = function(val, bypassMap) {\n            var col, t;\n            if (bypassMap == null) { bypassMap = false; }\n            if (isNaN(val) || (val === null)) { return _nacol; }\n            if (!bypassMap) {\n                if (_classes && (_classes.length > 2)) {\n                    // find the class\n                    var c = getClass(val);\n                    t = c / (_classes.length-2);\n                } else if (_max !== _min) {\n                    // just interpolate between min/max\n                    t = (val - _min) / (_max - _min);\n                } else {\n                    t = 1;\n                }\n            } else {\n                t = val;\n            }\n\n            // domain map\n            t = tMapDomain(t);\n\n            if (!bypassMap) {\n                t = tMapLightness(t);  // lightness correction\n            }\n\n            if (_gamma !== 1) { t = pow$3(t, _gamma); }\n\n            t = _padding[0] + (t * (1 - _padding[0] - _padding[1]));\n\n            t = Math.min(1, Math.max(0, t));\n\n            var k = Math.floor(t * 10000);\n\n            if (_useCache && _colorCache[k]) {\n                col = _colorCache[k];\n            } else {\n                if (type$2(_colors) === 'array') {\n                    //for i in [0.._pos.length-1]\n                    for (var i=0; i<_pos.length; i++) {\n                        var p = _pos[i];\n                        if (t <= p) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if ((t >= p) && (i === (_pos.length-1))) {\n                            col = _colors[i];\n                            break;\n                        }\n                        if (t > p && t < _pos[i+1]) {\n                            t = (t-p)/(_pos[i+1]-p);\n                            col = chroma$4.interpolate(_colors[i], _colors[i+1], t, _mode);\n                            break;\n                        }\n                    }\n                } else if (type$2(_colors) === 'function') {\n                    col = _colors(t);\n                }\n                if (_useCache) { _colorCache[k] = col; }\n            }\n            return col;\n        };\n\n        var resetCache = function () { return _colorCache = {}; };\n\n        setColors(colors);\n\n        // public interface\n\n        var f = function(v) {\n            var c = chroma$4(getColor(v));\n            if (_out && c[_out]) { return c[_out](); } else { return c; }\n        };\n\n        f.classes = function(classes) {\n            if (classes != null) {\n                if (type$2(classes) === 'array') {\n                    _classes = classes;\n                    _domain = [classes[0], classes[classes.length-1]];\n                } else {\n                    var d = chroma$4.analyze(_domain);\n                    if (classes === 0) {\n                        _classes = [d.min, d.max];\n                    } else {\n                        _classes = chroma$4.limits(d, 'e', classes);\n                    }\n                }\n                return f;\n            }\n            return _classes;\n        };\n\n\n        f.domain = function(domain) {\n            if (!arguments.length) {\n                return _domain;\n            }\n            _min = domain[0];\n            _max = domain[domain.length-1];\n            _pos = [];\n            var k = _colors.length;\n            if ((domain.length === k) && (_min !== _max)) {\n                // update positions\n                for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {\n                    var d = list[i];\n\n                  _pos.push((d-_min) / (_max-_min));\n                }\n            } else {\n                for (var c=0; c<k; c++) {\n                    _pos.push(c/(k-1));\n                }\n                if (domain.length > 2) {\n                    // set domain map\n                    var tOut = domain.map(function (d,i) { return i/(domain.length-1); });\n                    var tBreaks = domain.map(function (d) { return (d - _min) / (_max - _min); });\n                    if (!tBreaks.every(function (val, i) { return tOut[i] === val; })) {\n                        tMapDomain = function (t) {\n                            if (t <= 0 || t >= 1) { return t; }\n                            var i = 0;\n                            while (t >= tBreaks[i+1]) { i++; }\n                            var f = (t - tBreaks[i]) / (tBreaks[i+1] - tBreaks[i]);\n                            var out = tOut[i] + f * (tOut[i+1] - tOut[i]);\n                            return out;\n                        };\n                    }\n\n                }\n            }\n            _domain = [_min, _max];\n            return f;\n        };\n\n        f.mode = function(_m) {\n            if (!arguments.length) {\n                return _mode;\n            }\n            _mode = _m;\n            resetCache();\n            return f;\n        };\n\n        f.range = function(colors, _pos) {\n            setColors(colors);\n            return f;\n        };\n\n        f.out = function(_o) {\n            _out = _o;\n            return f;\n        };\n\n        f.spread = function(val) {\n            if (!arguments.length) {\n                return _spread;\n            }\n            _spread = val;\n            return f;\n        };\n\n        f.correctLightness = function(v) {\n            if (v == null) { v = true; }\n            _correctLightness = v;\n            resetCache();\n            if (_correctLightness) {\n                tMapLightness = function(t) {\n                    var L0 = getColor(0, true).lab()[0];\n                    var L1 = getColor(1, true).lab()[0];\n                    var pol = L0 > L1;\n                    var L_actual = getColor(t, true).lab()[0];\n                    var L_ideal = L0 + ((L1 - L0) * t);\n                    var L_diff = L_actual - L_ideal;\n                    var t0 = 0;\n                    var t1 = 1;\n                    var max_iter = 20;\n                    while ((Math.abs(L_diff) > 1e-2) && (max_iter-- > 0)) {\n                        (function() {\n                            if (pol) { L_diff *= -1; }\n                            if (L_diff < 0) {\n                                t0 = t;\n                                t += (t1 - t) * 0.5;\n                            } else {\n                                t1 = t;\n                                t += (t0 - t) * 0.5;\n                            }\n                            L_actual = getColor(t, true).lab()[0];\n                            return L_diff = L_actual - L_ideal;\n                        })();\n                    }\n                    return t;\n                };\n            } else {\n                tMapLightness = function (t) { return t; };\n            }\n            return f;\n        };\n\n        f.padding = function(p) {\n            if (p != null) {\n                if (type$2(p) === 'number') {\n                    p = [p,p];\n                }\n                _padding = p;\n                return f;\n            } else {\n                return _padding;\n            }\n        };\n\n        f.colors = function(numColors, out) {\n            // If no arguments are given, return the original colors that were provided\n            if (arguments.length < 2) { out = 'hex'; }\n            var result = [];\n\n            if (arguments.length === 0) {\n                result = _colors.slice(0);\n\n            } else if (numColors === 1) {\n                result = [f(0.5)];\n\n            } else if (numColors > 1) {\n                var dm = _domain[0];\n                var dd = _domain[1] - dm;\n                result = __range__(0, numColors, false).map(function (i) { return f( dm + ((i/(numColors-1)) * dd) ); });\n\n            } else { // returns all colors based on the defined classes\n                colors = [];\n                var samples = [];\n                if (_classes && (_classes.length > 2)) {\n                    for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {\n                        samples.push((_classes[i-1]+_classes[i])*0.5);\n                    }\n                } else {\n                    samples = _domain;\n                }\n                result = samples.map(function (v) { return f(v); });\n            }\n\n            if (chroma$4[out]) {\n                result = result.map(function (c) { return c[out](); });\n            }\n            return result;\n        };\n\n        f.cache = function(c) {\n            if (c != null) {\n                _useCache = c;\n                return f;\n            } else {\n                return _useCache;\n            }\n        };\n\n        f.gamma = function(g) {\n            if (g != null) {\n                _gamma = g;\n                return f;\n            } else {\n                return _gamma;\n            }\n        };\n\n        f.nodata = function(d) {\n            if (d != null) {\n                _nacol = chroma$4(d);\n                return f;\n            } else {\n                return _nacol;\n            }\n        };\n\n        return f;\n    };\n\n    function __range__(left, right, inclusive) {\n      var range = [];\n      var ascending = left < right;\n      var end = !inclusive ? right : ascending ? right + 1 : right - 1;\n      for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {\n        range.push(i);\n      }\n      return range;\n    }\n\n    //\n    // interpolates between a set of colors uzing a bezier spline\n    //\n\n    // @requires utils lab\n    var Color$5 = Color_1;\n\n    var scale$1 = scale$2;\n\n    // nth row of the pascal triangle\n    var binom_row = function(n) {\n        var row = [1, 1];\n        for (var i = 1; i < n; i++) {\n            var newrow = [1];\n            for (var j = 1; j <= row.length; j++) {\n                newrow[j] = (row[j] || 0) + row[j - 1];\n            }\n            row = newrow;\n        }\n        return row;\n    };\n\n    var bezier = function(colors) {\n        var assign, assign$1, assign$2;\n\n        var I, lab0, lab1, lab2;\n        colors = colors.map(function (c) { return new Color$5(c); });\n        if (colors.length === 2) {\n            // linear interpolation\n            (assign = colors.map(function (c) { return c.lab(); }), lab0 = assign[0], lab1 = assign[1]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return lab0[i] + (t * (lab1[i] - lab0[i])); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 3) {\n            // quadratic bezier interpolation\n            (assign$1 = colors.map(function (c) { return c.lab(); }), lab0 = assign$1[0], lab1 = assign$1[1], lab2 = assign$1[2]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t) * lab0[i]) + (2 * (1-t) * t * lab1[i]) + (t * t * lab2[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length === 4) {\n            // cubic bezier interpolation\n            var lab3;\n            (assign$2 = colors.map(function (c) { return c.lab(); }), lab0 = assign$2[0], lab1 = assign$2[1], lab2 = assign$2[2], lab3 = assign$2[3]);\n            I = function(t) {\n                var lab = ([0, 1, 2].map(function (i) { return ((1-t)*(1-t)*(1-t) * lab0[i]) + (3 * (1-t) * (1-t) * t * lab1[i]) + (3 * (1-t) * t * t * lab2[i]) + (t*t*t * lab3[i]); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else if (colors.length >= 5) {\n            // general case (degree n bezier)\n            var labs, row, n;\n            labs = colors.map(function (c) { return c.lab(); });\n            n = colors.length - 1;\n            row = binom_row(n);\n            I = function (t) {\n                var u = 1 - t;\n                var lab = ([0, 1, 2].map(function (i) { return labs.reduce(function (sum, el, j) { return (sum + row[j] * Math.pow( u, (n - j) ) * Math.pow( t, j ) * el[i]); }, 0); }));\n                return new Color$5(lab, 'lab');\n            };\n        } else {\n            throw new RangeError(\"No point in running bezier with only one color.\")\n        }\n        return I;\n    };\n\n    var bezier_1 = function (colors) {\n        var f = bezier(colors);\n        f.scale = function () { return scale$1(f); };\n        return f;\n    };\n\n    /*\n     * interpolates between a set of colors uzing a bezier spline\n     * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/\n     */\n\n    var chroma$3 = chroma_1;\n\n    var blend = function (bottom, top, mode) {\n        if (!blend[mode]) {\n            throw new Error('unknown blend mode ' + mode);\n        }\n        return blend[mode](bottom, top);\n    };\n\n    var blend_f = function (f) { return function (bottom,top) {\n            var c0 = chroma$3(top).rgb();\n            var c1 = chroma$3(bottom).rgb();\n            return chroma$3.rgb(f(c0, c1));\n        }; };\n\n    var each = function (f) { return function (c0, c1) {\n            var out = [];\n            out[0] = f(c0[0], c1[0]);\n            out[1] = f(c0[1], c1[1]);\n            out[2] = f(c0[2], c1[2]);\n            return out;\n        }; };\n\n    var normal = function (a) { return a; };\n    var multiply = function (a,b) { return a * b / 255; };\n    var darken = function (a,b) { return a > b ? b : a; };\n    var lighten = function (a,b) { return a > b ? a : b; };\n    var screen = function (a,b) { return 255 * (1 - (1-a/255) * (1-b/255)); };\n    var overlay = function (a,b) { return b < 128 ? 2 * a * b / 255 : 255 * (1 - 2 * (1 - a / 255 ) * ( 1 - b / 255 )); };\n    var burn = function (a,b) { return 255 * (1 - (1 - b / 255) / (a/255)); };\n    var dodge = function (a,b) {\n        if (a === 255) { return 255; }\n        a = 255 * (b / 255) / (1 - a / 255);\n        return a > 255 ? 255 : a\n    };\n\n    // # add = (a,b) ->\n    // #     if (a + b > 255) then 255 else a + b\n\n    blend.normal = blend_f(each(normal));\n    blend.multiply = blend_f(each(multiply));\n    blend.screen = blend_f(each(screen));\n    blend.overlay = blend_f(each(overlay));\n    blend.darken = blend_f(each(darken));\n    blend.lighten = blend_f(each(lighten));\n    blend.dodge = blend_f(each(dodge));\n    blend.burn = blend_f(each(burn));\n    // blend.add = blend_f(each(add));\n\n    var blend_1 = blend;\n\n    // cubehelix interpolation\n    // based on D.A. Green \"A colour scheme for the display of astronomical intensity images\"\n    // http://astron-soc.in/bulletin/11June/289392011.pdf\n\n    var type$1 = utils.type;\n    var clip_rgb = utils.clip_rgb;\n    var TWOPI = utils.TWOPI;\n    var pow$2 = Math.pow;\n    var sin$1 = Math.sin;\n    var cos$1 = Math.cos;\n    var chroma$2 = chroma_1;\n\n    var cubehelix = function(start, rotations, hue, gamma, lightness) {\n        if ( start === void 0 ) start=300;\n        if ( rotations === void 0 ) rotations=-1.5;\n        if ( hue === void 0 ) hue=1;\n        if ( gamma === void 0 ) gamma=1;\n        if ( lightness === void 0 ) lightness=[0,1];\n\n        var dh = 0, dl;\n        if (type$1(lightness) === 'array') {\n            dl = lightness[1] - lightness[0];\n        } else {\n            dl = 0;\n            lightness = [lightness, lightness];\n        }\n\n        var f = function(fract) {\n            var a = TWOPI * (((start+120)/360) + (rotations * fract));\n            var l = pow$2(lightness[0] + (dl * fract), gamma);\n            var h = dh !== 0 ? hue[0] + (fract * dh) : hue;\n            var amp = (h * l * (1-l)) / 2;\n            var cos_a = cos$1(a);\n            var sin_a = sin$1(a);\n            var r = l + (amp * ((-0.14861 * cos_a) + (1.78277* sin_a)));\n            var g = l + (amp * ((-0.29227 * cos_a) - (0.90649* sin_a)));\n            var b = l + (amp * (+1.97294 * cos_a));\n            return chroma$2(clip_rgb([r*255,g*255,b*255,1]));\n        };\n\n        f.start = function(s) {\n            if ((s == null)) { return start; }\n            start = s;\n            return f;\n        };\n\n        f.rotations = function(r) {\n            if ((r == null)) { return rotations; }\n            rotations = r;\n            return f;\n        };\n\n        f.gamma = function(g) {\n            if ((g == null)) { return gamma; }\n            gamma = g;\n            return f;\n        };\n\n        f.hue = function(h) {\n            if ((h == null)) { return hue; }\n            hue = h;\n            if (type$1(hue) === 'array') {\n                dh = hue[1] - hue[0];\n                if (dh === 0) { hue = hue[1]; }\n            } else {\n                dh = 0;\n            }\n            return f;\n        };\n\n        f.lightness = function(h) {\n            if ((h == null)) { return lightness; }\n            if (type$1(h) === 'array') {\n                lightness = h;\n                dl = h[1] - h[0];\n            } else {\n                lightness = [h,h];\n                dl = 0;\n            }\n            return f;\n        };\n\n        f.scale = function () { return chroma$2.scale(f); };\n\n        f.hue(hue);\n\n        return f;\n    };\n\n    var Color$4 = Color_1;\n    var digits = '0123456789abcdef';\n\n    var floor$1 = Math.floor;\n    var random = Math.random;\n\n    var random_1 = function () {\n        var code = '#';\n        for (var i=0; i<6; i++) {\n            code += digits.charAt(floor$1(random() * 16));\n        }\n        return new Color$4(code, 'hex');\n    };\n\n    var type = type$p;\n    var log = Math.log;\n    var pow$1 = Math.pow;\n    var floor = Math.floor;\n    var abs$1 = Math.abs;\n\n\n    var analyze = function (data, key) {\n        if ( key === void 0 ) key=null;\n\n        var r = {\n            min: Number.MAX_VALUE,\n            max: Number.MAX_VALUE*-1,\n            sum: 0,\n            values: [],\n            count: 0\n        };\n        if (type(data) === 'object') {\n            data = Object.values(data);\n        }\n        data.forEach(function (val) {\n            if (key && type(val) === 'object') { val = val[key]; }\n            if (val !== undefined && val !== null && !isNaN(val)) {\n                r.values.push(val);\n                r.sum += val;\n                if (val < r.min) { r.min = val; }\n                if (val > r.max) { r.max = val; }\n                r.count += 1;\n            }\n        });\n\n        r.domain = [r.min, r.max];\n\n        r.limits = function (mode, num) { return limits(r, mode, num); };\n\n        return r;\n    };\n\n\n    var limits = function (data, mode, num) {\n        if ( mode === void 0 ) mode='equal';\n        if ( num === void 0 ) num=7;\n\n        if (type(data) == 'array') {\n            data = analyze(data);\n        }\n        var min = data.min;\n        var max = data.max;\n        var values = data.values.sort(function (a,b) { return a-b; });\n\n        if (num === 1) { return [min,max]; }\n\n        var limits = [];\n\n        if (mode.substr(0,1) === 'c') { // continuous\n            limits.push(min);\n            limits.push(max);\n        }\n\n        if (mode.substr(0,1) === 'e') { // equal interval\n            limits.push(min);\n            for (var i=1; i<num; i++) {\n                limits.push(min+((i/num)*(max-min)));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'l') { // log scale\n            if (min <= 0) {\n                throw new Error('Logarithmic scales are only possible for values > 0');\n            }\n            var min_log = Math.LOG10E * log(min);\n            var max_log = Math.LOG10E * log(max);\n            limits.push(min);\n            for (var i$1=1; i$1<num; i$1++) {\n                limits.push(pow$1(10, min_log + ((i$1/num) * (max_log - min_log))));\n            }\n            limits.push(max);\n        }\n\n        else if (mode.substr(0,1) === 'q') { // quantile scale\n            limits.push(min);\n            for (var i$2=1; i$2<num; i$2++) {\n                var p = ((values.length-1) * i$2)/num;\n                var pb = floor(p);\n                if (pb === p) {\n                    limits.push(values[pb]);\n                } else { // p > pb\n                    var pr = p - pb;\n                    limits.push((values[pb]*(1-pr)) + (values[pb+1]*pr));\n                }\n            }\n            limits.push(max);\n\n        }\n\n        else if (mode.substr(0,1) === 'k') { // k-means clustering\n            /*\n            implementation based on\n            http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n            simplified for 1-d input values\n            */\n            var cluster;\n            var n = values.length;\n            var assignments = new Array(n);\n            var clusterSizes = new Array(num);\n            var repeat = true;\n            var nb_iters = 0;\n            var centroids = null;\n\n            // get seed values\n            centroids = [];\n            centroids.push(min);\n            for (var i$3=1; i$3<num; i$3++) {\n                centroids.push(min + ((i$3/num) * (max-min)));\n            }\n            centroids.push(max);\n\n            while (repeat) {\n                // assignment step\n                for (var j=0; j<num; j++) {\n                    clusterSizes[j] = 0;\n                }\n                for (var i$4=0; i$4<n; i$4++) {\n                    var value = values[i$4];\n                    var mindist = Number.MAX_VALUE;\n                    var best = (void 0);\n                    for (var j$1=0; j$1<num; j$1++) {\n                        var dist = abs$1(centroids[j$1]-value);\n                        if (dist < mindist) {\n                            mindist = dist;\n                            best = j$1;\n                        }\n                        clusterSizes[best]++;\n                        assignments[i$4] = best;\n                    }\n                }\n\n                // update centroids step\n                var newCentroids = new Array(num);\n                for (var j$2=0; j$2<num; j$2++) {\n                    newCentroids[j$2] = null;\n                }\n                for (var i$5=0; i$5<n; i$5++) {\n                    cluster = assignments[i$5];\n                    if (newCentroids[cluster] === null) {\n                        newCentroids[cluster] = values[i$5];\n                    } else {\n                        newCentroids[cluster] += values[i$5];\n                    }\n                }\n                for (var j$3=0; j$3<num; j$3++) {\n                    newCentroids[j$3] *= 1/clusterSizes[j$3];\n                }\n\n                // check convergence\n                repeat = false;\n                for (var j$4=0; j$4<num; j$4++) {\n                    if (newCentroids[j$4] !== centroids[j$4]) {\n                        repeat = true;\n                        break;\n                    }\n                }\n\n                centroids = newCentroids;\n                nb_iters++;\n\n                if (nb_iters > 200) {\n                    repeat = false;\n                }\n            }\n\n            // finished k-means clustering\n            // the next part is borrowed from gabrielflor.it\n            var kClusters = {};\n            for (var j$5=0; j$5<num; j$5++) {\n                kClusters[j$5] = [];\n            }\n            for (var i$6=0; i$6<n; i$6++) {\n                cluster = assignments[i$6];\n                kClusters[cluster].push(values[i$6]);\n            }\n            var tmpKMeansBreaks = [];\n            for (var j$6=0; j$6<num; j$6++) {\n                tmpKMeansBreaks.push(kClusters[j$6][0]);\n                tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length-1]);\n            }\n            tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a,b){ return a-b; });\n            limits.push(tmpKMeansBreaks[0]);\n            for (var i$7=1; i$7 < tmpKMeansBreaks.length; i$7+= 2) {\n                var v = tmpKMeansBreaks[i$7];\n                if (!isNaN(v) && (limits.indexOf(v) === -1)) {\n                    limits.push(v);\n                }\n            }\n        }\n        return limits;\n    };\n\n    var analyze_1 = {analyze: analyze, limits: limits};\n\n    var Color$3 = Color_1;\n\n\n    var contrast = function (a, b) {\n        // WCAG contrast ratio\n        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef\n        a = new Color$3(a);\n        b = new Color$3(b);\n        var l1 = a.luminance();\n        var l2 = b.luminance();\n        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05);\n    };\n\n    var Color$2 = Color_1;\n    var sqrt = Math.sqrt;\n    var pow = Math.pow;\n    var min = Math.min;\n    var max = Math.max;\n    var atan2 = Math.atan2;\n    var abs = Math.abs;\n    var cos = Math.cos;\n    var sin = Math.sin;\n    var exp = Math.exp;\n    var PI = Math.PI;\n\n    var deltaE = function(a, b, Kl, Kc, Kh) {\n        if ( Kl === void 0 ) Kl=1;\n        if ( Kc === void 0 ) Kc=1;\n        if ( Kh === void 0 ) Kh=1;\n\n        // Delta E (CIE 2000)\n        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html\n        var rad2deg = function(rad) {\n            return 360 * rad / (2 * PI);\n        };\n        var deg2rad = function(deg) {\n            return (2 * PI * deg) / 360;\n        };\n        a = new Color$2(a);\n        b = new Color$2(b);\n        var ref = Array.from(a.lab());\n        var L1 = ref[0];\n        var a1 = ref[1];\n        var b1 = ref[2];\n        var ref$1 = Array.from(b.lab());\n        var L2 = ref$1[0];\n        var a2 = ref$1[1];\n        var b2 = ref$1[2];\n        var avgL = (L1 + L2)/2;\n        var C1 = sqrt(pow(a1, 2) + pow(b1, 2));\n        var C2 = sqrt(pow(a2, 2) + pow(b2, 2));\n        var avgC = (C1 + C2)/2;\n        var G = 0.5*(1-sqrt(pow(avgC, 7)/(pow(avgC, 7) + pow(25, 7))));\n        var a1p = a1*(1+G);\n        var a2p = a2*(1+G);\n        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2));\n        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2));\n        var avgCp = (C1p + C2p)/2;\n        var arctan1 = rad2deg(atan2(b1, a1p));\n        var arctan2 = rad2deg(atan2(b2, a2p));\n        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360;\n        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360;\n        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360)/2 : (h1p + h2p)/2;\n        var T = 1 - 0.17*cos(deg2rad(avgHp - 30)) + 0.24*cos(deg2rad(2*avgHp)) + 0.32*cos(deg2rad(3*avgHp + 6)) - 0.2*cos(deg2rad(4*avgHp - 63));\n        var deltaHp = h2p - h1p;\n        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360;\n        deltaHp = 2*sqrt(C1p*C2p)*sin(deg2rad(deltaHp)/2);\n        var deltaL = L2 - L1;\n        var deltaCp = C2p - C1p;    \n        var sl = 1 + (0.015*pow(avgL - 50, 2))/sqrt(20 + pow(avgL - 50, 2));\n        var sc = 1 + 0.045*avgCp;\n        var sh = 1 + 0.015*avgCp*T;\n        var deltaTheta = 30*exp(-pow((avgHp - 275)/25, 2));\n        var Rc = 2*sqrt(pow(avgCp, 7)/(pow(avgCp, 7) + pow(25, 7)));\n        var Rt = -Rc*sin(2*deg2rad(deltaTheta));\n        var result = sqrt(pow(deltaL/(Kl*sl), 2) + pow(deltaCp/(Kc*sc), 2) + pow(deltaHp/(Kh*sh), 2) + Rt*(deltaCp/(Kc*sc))*(deltaHp/(Kh*sh)));\n        return max(0, min(100, result));\n    };\n\n    var Color$1 = Color_1;\n\n    // simple Euclidean distance\n    var distance = function(a, b, mode) {\n        if ( mode === void 0 ) mode='lab';\n\n        // Delta E (CIE 1976)\n        // see http://www.brucelindbloom.com/index.html?Equations.html\n        a = new Color$1(a);\n        b = new Color$1(b);\n        var l1 = a.get(mode);\n        var l2 = b.get(mode);\n        var sum_sq = 0;\n        for (var i in l1) {\n            var d = (l1[i] || 0) - (l2[i] || 0);\n            sum_sq += d*d;\n        }\n        return Math.sqrt(sum_sq);\n    };\n\n    var Color = Color_1;\n\n    var valid = function () {\n        var args = [], len = arguments.length;\n        while ( len-- ) args[ len ] = arguments[ len ];\n\n        try {\n            new (Function.prototype.bind.apply( Color, [ null ].concat( args) ));\n            return true;\n        } catch (e) {\n            return false;\n        }\n    };\n\n    // some pre-defined color scales:\n    var chroma$1 = chroma_1;\n\n    var scale = scale$2;\n\n    var scales = {\n    \tcool: function cool() { return scale([chroma$1.hsl(180,1,.9), chroma$1.hsl(250,.7,.4)]) },\n    \thot: function hot() { return scale(['#000','#f00','#ff0','#fff']).mode('rgb') }\n    };\n\n    /**\n        ColorBrewer colors for chroma.js\n\n        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The\n        Pennsylvania State University.\n\n        Licensed under the Apache License, Version 2.0 (the \"License\");\n        you may not use this file except in compliance with the License.\n        You may obtain a copy of the License at\n        http://www.apache.org/licenses/LICENSE-2.0\n\n        Unless required by applicable law or agreed to in writing, software distributed\n        under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n        CONDITIONS OF ANY KIND, either express or implied. See the License for the\n        specific language governing permissions and limitations under the License.\n    */\n\n    var colorbrewer = {\n        // sequential\n        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],\n\n        // diverging\n\n        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n\n        // qualitative\n\n        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],\n    };\n\n    // add lowercase aliases for case-insensitive matches\n    for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {\n        var key = list[i];\n\n        colorbrewer[key.toLowerCase()] = colorbrewer[key];\n    }\n\n    var colorbrewer_1 = colorbrewer;\n\n    var chroma = chroma_1;\n\n    // feel free to comment out anything to rollup\n    // a smaller chroma.js built\n\n    // io --> convert colors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    // operators --> modify existing Colors\n\n\n\n\n\n\n\n\n\n\n    // interpolators\n\n\n\n\n\n\n\n\n\n\n\n\n    // generators -- > create new colors\n    chroma.average = average;\n    chroma.bezier = bezier_1;\n    chroma.blend = blend_1;\n    chroma.cubehelix = cubehelix;\n    chroma.mix = chroma.interpolate = mix$1;\n    chroma.random = random_1;\n    chroma.scale = scale$2;\n\n    // other utility methods\n    chroma.analyze = analyze_1.analyze;\n    chroma.contrast = contrast;\n    chroma.deltaE = deltaE;\n    chroma.distance = distance;\n    chroma.limits = analyze_1.limits;\n    chroma.valid = valid;\n\n    // scale\n    chroma.scales = scales;\n\n    // colors\n    chroma.colors = w3cx11_1;\n    chroma.brewer = colorbrewer_1;\n\n    var chroma_js = chroma;\n\n    return chroma_js;\n\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, scale} from './util.js';\n\nconst o3derrboundA = (7 + 56 * epsilon) * epsilon;\nconst o3derrboundB = (3 + 28 * epsilon) * epsilon;\nconst o3derrboundC = (26 + 288 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst at_b = vec(4);\nconst at_c = vec(4);\nconst bt_c = vec(4);\nconst bt_a = vec(4);\nconst ct_a = vec(4);\nconst ct_b = vec(4);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abt = vec(8);\nconst u = vec(4);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _16 = vec(8);\nconst _12 = vec(12);\n\nlet fin = vec(192);\nlet fin2 = vec(192);\n\nfunction finadd(finlen, alen, a) {\n    finlen = sum(finlen, fin, alen, a, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction tailinit(xtail, ytail, ax, ay, bx, by, a, b) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3, negate;\n    if (xtail === 0) {\n        if (ytail === 0) {\n            a[0] = 0;\n            b[0] = 0;\n            return 1;\n        } else {\n            negate = -ytail;\n            s1 = negate * ax;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        }\n    } else {\n        if (ytail === 0) {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            a[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            a[1] = s1;\n            negate = -xtail;\n            s1 = negate * by;\n            c = splitter * negate;\n            ahi = c - (c - negate);\n            alo = negate - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            b[0] = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            b[1] = s1;\n            return 2;\n        } else {\n            s1 = xtail * ay;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * ay;\n            bhi = c - (c - ay);\n            blo = ay - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = ytail * ax;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * ax;\n            bhi = c - (c - ax);\n            blo = ax - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            a[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            a[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            a[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            a[3] = u3;\n            s1 = ytail * bx;\n            c = splitter * ytail;\n            ahi = c - (c - ytail);\n            alo = ytail - ahi;\n            c = splitter * bx;\n            bhi = c - (c - bx);\n            blo = bx - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = xtail * by;\n            c = splitter * xtail;\n            ahi = c - (c - xtail);\n            alo = xtail - ahi;\n            c = splitter * by;\n            bhi = c - (c - by);\n            blo = by - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            b[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            b[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            b[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            b[3] = u3;\n            return 4;\n        }\n    }\n}\n\nfunction tailadd(finlen, a, b, k, z) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, u3;\n    s1 = a * b;\n    c = splitter * a;\n    ahi = c - (c - a);\n    alo = a - ahi;\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    c = splitter * k;\n    bhi = c - (c - k);\n    blo = k - bhi;\n    _i = s0 * k;\n    c = splitter * s0;\n    ahi = c - (c - s0);\n    alo = s0 - ahi;\n    u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n    _j = s1 * k;\n    c = splitter * s1;\n    ahi = c - (c - s1);\n    alo = s1 - ahi;\n    _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n    _k = _i + _0;\n    bvirt = _k - _i;\n    u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n    u3 = _j + _k;\n    u[2] = _k - (u3 - _j);\n    u[3] = u3;\n    finlen = finadd(finlen, 4, u);\n    if (z !== 0) {\n        c = splitter * z;\n        bhi = c - (c - z);\n        blo = z - bhi;\n        _i = s0 * z;\n        c = splitter * s0;\n        ahi = c - (c - s0);\n        alo = s0 - ahi;\n        u[0] = alo * blo - (_i - ahi * bhi - alo * bhi - ahi * blo);\n        _j = s1 * z;\n        c = splitter * s1;\n        ahi = c - (c - s1);\n        alo = s1 - ahi;\n        _0 = alo * blo - (_j - ahi * bhi - alo * bhi - ahi * blo);\n        _k = _i + _0;\n        bvirt = _k - _i;\n        u[1] = _i - (_k - bvirt) + (_0 - bvirt);\n        u3 = _j + _k;\n        u[2] = _k - (u3 - _j);\n        u[3] = u3;\n        finlen = finadd(finlen, 4, u);\n    }\n    return finlen;\n}\n\nfunction orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail;\n    let adytail, bdytail, cdytail;\n    let adztail, bdztail, cdztail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _k, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            scale(4, bc, adz, _8), _8,\n            scale(4, ca, bdz, _8b), _8b, _16), _16,\n        scale(4, ab, cdz, _8), _8, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = o3derrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    bvirt = az - adz;\n    adztail = az - (adz + bvirt) + (bvirt - dz);\n    bvirt = bz - bdz;\n    bdztail = bz - (bdz + bvirt) + (bvirt - dz);\n    bvirt = cz - cdz;\n    cdztail = cz - (cdz + bvirt) + (bvirt - dz);\n\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 &&\n        adytail === 0 && bdytail === 0 && cdytail === 0 &&\n        adztail === 0 && bdztail === 0 && cdztail === 0) {\n        return det;\n    }\n\n    errbound = o3derrboundC * permanent + resulterrbound * Math.abs(det);\n    det +=\n        adz * (bdx * cdytail + cdy * bdxtail - (bdy * cdxtail + cdx * bdytail)) + adztail * (bdx * cdy - bdy * cdx) +\n        bdz * (cdx * adytail + ady * cdxtail - (cdy * adxtail + adx * cdytail)) + bdztail * (cdx * ady - cdy * adx) +\n        cdz * (adx * bdytail + bdy * adxtail - (ady * bdxtail + bdx * adytail)) + cdztail * (adx * bdy - ady * bdx);\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    const at_len = tailinit(adxtail, adytail, bdx, bdy, cdx, cdy, at_b, at_c);\n    const bt_len = tailinit(bdxtail, bdytail, cdx, cdy, adx, ady, bt_c, bt_a);\n    const ct_len = tailinit(cdxtail, cdytail, adx, ady, bdx, bdy, ct_a, ct_b);\n\n    const bctlen = sum(bt_len, bt_c, ct_len, ct_b, bct);\n    finlen = finadd(finlen, scale(bctlen, bct, adz, _16), _16);\n\n    const catlen = sum(ct_len, ct_a, at_len, at_c, cat);\n    finlen = finadd(finlen, scale(catlen, cat, bdz, _16), _16);\n\n    const abtlen = sum(at_len, at_b, bt_len, bt_a, abt);\n    finlen = finadd(finlen, scale(abtlen, abt, cdz, _16), _16);\n\n    if (adztail !== 0) {\n        finlen = finadd(finlen, scale(4, bc, adztail, _12), _12);\n        finlen = finadd(finlen, scale(bctlen, bct, adztail, _16), _16);\n    }\n    if (bdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ca, bdztail, _12), _12);\n        finlen = finadd(finlen, scale(catlen, cat, bdztail, _16), _16);\n    }\n    if (cdztail !== 0) {\n        finlen = finadd(finlen, scale(4, ab, cdztail, _12), _12);\n        finlen = finadd(finlen, scale(abtlen, abt, cdztail, _16), _16);\n    }\n\n    if (adxtail !== 0) {\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, adxtail, bdytail, cdz, cdztail);\n        }\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, -adxtail, cdytail, bdz, bdztail);\n        }\n    }\n    if (bdxtail !== 0) {\n        if (cdytail !== 0) {\n            finlen = tailadd(finlen, bdxtail, cdytail, adz, adztail);\n        }\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, -bdxtail, adytail, cdz, cdztail);\n        }\n    }\n    if (cdxtail !== 0) {\n        if (adytail !== 0) {\n            finlen = tailadd(finlen, cdxtail, adytail, bdz, bdztail);\n        }\n        if (bdytail !== 0) {\n            finlen = tailadd(finlen, -cdxtail, bdytail, adz, adztail);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function orient3d(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n\n    const det =\n        adz * (bdxcdy - cdxbdy) +\n        bdz * (cdxady - adxcdy) +\n        cdz * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * Math.abs(adz) +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * Math.abs(bdz) +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * Math.abs(cdz);\n\n    const errbound = o3derrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n\n    return orient3dadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, permanent);\n}\n\nexport function orient3dfast(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n    const adz = az - dz;\n    const bdz = bz - dz;\n    const cdz = cz - dz;\n\n    return adx * (bdy * cdz - bdz * cdy) +\n        bdx * (cdy * adz - cdz * ady) +\n        cdx * (ady * bdz - adz * bdy);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale} from './util.js';\n\nconst iccerrboundA = (10 + 96 * epsilon) * epsilon;\nconst iccerrboundB = (4 + 48 * epsilon) * epsilon;\nconst iccerrboundC = (44 + 576 * epsilon) * epsilon * epsilon;\n\nconst bc = vec(4);\nconst ca = vec(4);\nconst ab = vec(4);\nconst aa = vec(4);\nconst bb = vec(4);\nconst cc = vec(4);\nconst u = vec(4);\nconst v = vec(4);\nconst axtbc = vec(8);\nconst aytbc = vec(8);\nconst bxtca = vec(8);\nconst bytca = vec(8);\nconst cxtab = vec(8);\nconst cytab = vec(8);\nconst abt = vec(8);\nconst bct = vec(8);\nconst cat = vec(8);\nconst abtt = vec(4);\nconst bctt = vec(4);\nconst catt = vec(4);\n\nconst _8 = vec(8);\nconst _16 = vec(16);\nconst _16b = vec(16);\nconst _16c = vec(16);\nconst _32 = vec(32);\nconst _32b = vec(32);\nconst _48 = vec(48);\nconst _64 = vec(64);\n\nlet fin = vec(1152);\nlet fin2 = vec(1152);\n\nfunction finadd(finlen, a, alen) {\n    finlen = sum(finlen, fin, a, alen, fin2);\n    const tmp = fin; fin = fin2; fin2 = tmp;\n    return finlen;\n}\n\nfunction incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent) {\n    let finlen;\n    let adxtail, bdxtail, cdxtail, adytail, bdytail, cdytail;\n    let axtbclen, aytbclen, bxtcalen, bytcalen, cxtablen, cytablen;\n    let abtlen, bctlen, catlen;\n    let abttlen, bcttlen, cattlen;\n    let n1, n0;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    s1 = bdx * cdy;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cdx * bdy;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cdx * ady;\n    c = splitter * cdx;\n    ahi = c - (c - cdx);\n    alo = cdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = adx * cdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * cdy;\n    bhi = c - (c - cdy);\n    blo = cdy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ca[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ca[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ca[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ca[3] = u3;\n    s1 = adx * bdy;\n    c = splitter * adx;\n    ahi = c - (c - adx);\n    alo = adx - ahi;\n    c = splitter * bdy;\n    bhi = c - (c - bdy);\n    blo = bdy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bdx * ady;\n    c = splitter * bdx;\n    ahi = c - (c - bdx);\n    alo = bdx - ahi;\n    c = splitter * ady;\n    bhi = c - (c - ady);\n    blo = ady - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n\n    finlen = sum(\n        sum(\n            sum(\n                scale(scale(4, bc, adx, _8), _8, adx, _16), _16,\n                scale(scale(4, bc, ady, _8), _8, ady, _16b), _16b, _32), _32,\n            sum(\n                scale(scale(4, ca, bdx, _8), _8, bdx, _16), _16,\n                scale(scale(4, ca, bdy, _8), _8, bdy, _16b), _16b, _32b), _32b, _64), _64,\n        sum(\n            scale(scale(4, ab, cdx, _8), _8, cdx, _16), _16,\n            scale(scale(4, ab, cdy, _8), _8, cdy, _16b), _16b, _32), _32, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = iccerrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - adx;\n    adxtail = ax - (adx + bvirt) + (bvirt - dx);\n    bvirt = ay - ady;\n    adytail = ay - (ady + bvirt) + (bvirt - dy);\n    bvirt = bx - bdx;\n    bdxtail = bx - (bdx + bvirt) + (bvirt - dx);\n    bvirt = by - bdy;\n    bdytail = by - (bdy + bvirt) + (bvirt - dy);\n    bvirt = cx - cdx;\n    cdxtail = cx - (cdx + bvirt) + (bvirt - dx);\n    bvirt = cy - cdy;\n    cdytail = cy - (cdy + bvirt) + (bvirt - dy);\n    if (adxtail === 0 && bdxtail === 0 && cdxtail === 0 && adytail === 0 && bdytail === 0 && cdytail === 0) {\n        return det;\n    }\n\n    errbound = iccerrboundC * permanent + resulterrbound * Math.abs(det);\n    det += ((adx * adx + ady * ady) * ((bdx * cdytail + cdy * bdxtail) - (bdy * cdxtail + cdx * bdytail)) +\n        2 * (adx * adxtail + ady * adytail) * (bdx * cdy - bdy * cdx)) +\n        ((bdx * bdx + bdy * bdy) * ((cdx * adytail + ady * cdxtail) - (cdy * adxtail + adx * cdytail)) +\n        2 * (bdx * bdxtail + bdy * bdytail) * (cdx * ady - cdy * adx)) +\n        ((cdx * cdx + cdy * cdy) * ((adx * bdytail + bdy * adxtail) - (ady * bdxtail + bdx * adytail)) +\n        2 * (cdx * cdxtail + cdy * cdytail) * (adx * bdy - ady * bdx));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n        s1 = adx * adx;\n        c = splitter * adx;\n        ahi = c - (c - adx);\n        alo = adx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = ady * ady;\n        c = splitter * ady;\n        ahi = c - (c - ady);\n        alo = ady - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        aa[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        aa[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        aa[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        aa[3] = u3;\n    }\n    if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n        s1 = bdx * bdx;\n        c = splitter * bdx;\n        ahi = c - (c - bdx);\n        alo = bdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = bdy * bdy;\n        c = splitter * bdy;\n        ahi = c - (c - bdy);\n        alo = bdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        bb[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        bb[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        bb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        bb[3] = u3;\n    }\n    if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n        s1 = cdx * cdx;\n        c = splitter * cdx;\n        ahi = c - (c - cdx);\n        alo = cdx - ahi;\n        s0 = alo * alo - (s1 - ahi * ahi - (ahi + ahi) * alo);\n        t1 = cdy * cdy;\n        c = splitter * cdy;\n        ahi = c - (c - cdy);\n        alo = cdy - ahi;\n        t0 = alo * alo - (t1 - ahi * ahi - (ahi + ahi) * alo);\n        _i = s0 + t0;\n        bvirt = _i - s0;\n        cc[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n        _j = s1 + _i;\n        bvirt = _j - s1;\n        _0 = s1 - (_j - bvirt) + (_i - bvirt);\n        _i = _0 + t1;\n        bvirt = _i - _0;\n        cc[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n        u3 = _j + _i;\n        bvirt = u3 - _j;\n        cc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n        cc[3] = u3;\n    }\n\n    if (adxtail !== 0) {\n        axtbclen = scale(4, bc, adxtail, axtbc);\n        finlen = finadd(finlen, sum_three(\n            scale(axtbclen, axtbc, 2 * adx, _16), _16,\n            scale(scale(4, cc, adxtail, _8), _8, bdy, _16b), _16b,\n            scale(scale(4, bb, adxtail, _8), _8, -cdy, _16c), _16c, _32, _48), _48);\n    }\n    if (adytail !== 0) {\n        aytbclen = scale(4, bc, adytail, aytbc);\n        finlen = finadd(finlen, sum_three(\n            scale(aytbclen, aytbc, 2 * ady, _16), _16,\n            scale(scale(4, bb, adytail, _8), _8, cdx, _16b), _16b,\n            scale(scale(4, cc, adytail, _8), _8, -bdx, _16c), _16c, _32, _48), _48);\n    }\n    if (bdxtail !== 0) {\n        bxtcalen = scale(4, ca, bdxtail, bxtca);\n        finlen = finadd(finlen, sum_three(\n            scale(bxtcalen, bxtca, 2 * bdx, _16), _16,\n            scale(scale(4, aa, bdxtail, _8), _8, cdy, _16b), _16b,\n            scale(scale(4, cc, bdxtail, _8), _8, -ady, _16c), _16c, _32, _48), _48);\n    }\n    if (bdytail !== 0) {\n        bytcalen = scale(4, ca, bdytail, bytca);\n        finlen = finadd(finlen, sum_three(\n            scale(bytcalen, bytca, 2 * bdy, _16), _16,\n            scale(scale(4, cc, bdytail, _8), _8, adx, _16b), _16b,\n            scale(scale(4, aa, bdytail, _8), _8, -cdx, _16c), _16c, _32, _48), _48);\n    }\n    if (cdxtail !== 0) {\n        cxtablen = scale(4, ab, cdxtail, cxtab);\n        finlen = finadd(finlen, sum_three(\n            scale(cxtablen, cxtab, 2 * cdx, _16), _16,\n            scale(scale(4, bb, cdxtail, _8), _8, ady, _16b), _16b,\n            scale(scale(4, aa, cdxtail, _8), _8, -bdy, _16c), _16c, _32, _48), _48);\n    }\n    if (cdytail !== 0) {\n        cytablen = scale(4, ab, cdytail, cytab);\n        finlen = finadd(finlen, sum_three(\n            scale(cytablen, cytab, 2 * cdy, _16), _16,\n            scale(scale(4, aa, cdytail, _8), _8, bdx, _16b), _16b,\n            scale(scale(4, bb, cdytail, _8), _8, -adx, _16c), _16c, _32, _48), _48);\n    }\n\n    if (adxtail !== 0 || adytail !== 0) {\n        if (bdxtail !== 0 || bdytail !== 0 || cdxtail !== 0 || cdytail !== 0) {\n            s1 = bdxtail * cdy;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdy;\n            bhi = c - (c - cdy);\n            blo = cdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * cdytail;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            s1 = cdxtail * -bdy;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * -bdy;\n            bhi = c - (c - -bdy);\n            blo = -bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * -bdytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * -bdytail;\n            bhi = c - (c - -bdytail);\n            blo = -bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            bctlen = sum(4, u, 4, v, bct);\n            s1 = bdxtail * cdytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdxtail * bdytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            bctt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            bctt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            bctt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            bctt[3] = u3;\n            bcttlen = 4;\n        } else {\n            bct[0] = 0;\n            bctlen = 1;\n            bctt[0] = 0;\n            bcttlen = 1;\n        }\n        if (adxtail !== 0) {\n            const len = scale(bctlen, bct, adxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(axtbclen, axtbc, adxtail, _16), _16,\n                scale(len, _16c, 2 * adx, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * adx, _16), _16,\n                scale(len2, _8, adxtail, _16b), _16b,\n                scale(len, _16c, adxtail, _32), _32, _32b, _64), _64);\n\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, adxtail, _8), _8, bdytail, _16), _16);\n            }\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, -adxtail, _8), _8, cdytail, _16), _16);\n            }\n        }\n        if (adytail !== 0) {\n            const len = scale(bctlen, bct, adytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(aytbclen, aytbc, adytail, _16), _16,\n                scale(len, _16c, 2 * ady, _32), _32, _48), _48);\n\n            const len2 = scale(bcttlen, bctt, adytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * ady, _16), _16,\n                scale(len2, _8, adytail, _16b), _16b,\n                scale(len, _16c, adytail, _32), _32, _32b, _64), _64);\n        }\n    }\n    if (bdxtail !== 0 || bdytail !== 0) {\n        if (cdxtail !== 0 || cdytail !== 0 || adxtail !== 0 || adytail !== 0) {\n            s1 = cdxtail * ady;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * ady;\n            bhi = c - (c - ady);\n            blo = ady - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = cdx * adytail;\n            c = splitter * cdx;\n            ahi = c - (c - cdx);\n            alo = cdx - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -cdy;\n            n0 = -cdytail;\n            s1 = adxtail * n1;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * n0;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            catlen = sum(4, u, 4, v, cat);\n            s1 = cdxtail * adytail;\n            c = splitter * cdxtail;\n            ahi = c - (c - cdxtail);\n            alo = cdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adxtail * cdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * cdytail;\n            bhi = c - (c - cdytail);\n            blo = cdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            catt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            catt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            catt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            catt[3] = u3;\n            cattlen = 4;\n        } else {\n            cat[0] = 0;\n            catlen = 1;\n            catt[0] = 0;\n            cattlen = 1;\n        }\n        if (bdxtail !== 0) {\n            const len = scale(catlen, cat, bdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bxtcalen, bxtca, bdxtail, _16), _16,\n                scale(len, _16c, 2 * bdx, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdx, _16), _16,\n                scale(len2, _8, bdxtail, _16b), _16b,\n                scale(len, _16c, bdxtail, _32), _32, _32b, _64), _64);\n\n            if (cdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, bdxtail, _8), _8, cdytail, _16), _16);\n            }\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, cc, -bdxtail, _8), _8, adytail, _16), _16);\n            }\n        }\n        if (bdytail !== 0) {\n            const len = scale(catlen, cat, bdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(bytcalen, bytca, bdytail, _16), _16,\n                scale(len, _16c, 2 * bdy, _32), _32, _48), _48);\n\n            const len2 = scale(cattlen, catt, bdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * bdy, _16), _16,\n                scale(len2, _8, bdytail, _16b), _16b,\n                scale(len, _16c, bdytail, _32), _32,  _32b, _64), _64);\n        }\n    }\n    if (cdxtail !== 0 || cdytail !== 0) {\n        if (adxtail !== 0 || adytail !== 0 || bdxtail !== 0 || bdytail !== 0) {\n            s1 = adxtail * bdy;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdy;\n            bhi = c - (c - bdy);\n            blo = bdy - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = adx * bdytail;\n            c = splitter * adx;\n            ahi = c - (c - adx);\n            alo = adx - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            u[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            u[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            u[3] = u3;\n            n1 = -ady;\n            n0 = -adytail;\n            s1 = bdxtail * n1;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * n1;\n            bhi = c - (c - n1);\n            blo = n1 - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdx * n0;\n            c = splitter * bdx;\n            ahi = c - (c - bdx);\n            alo = bdx - ahi;\n            c = splitter * n0;\n            bhi = c - (c - n0);\n            blo = n0 - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 + t0;\n            bvirt = _i - s0;\n            v[0] = s0 - (_i - bvirt) + (t0 - bvirt);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 + t1;\n            bvirt = _i - _0;\n            v[1] = _0 - (_i - bvirt) + (t1 - bvirt);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            v[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            v[3] = u3;\n            abtlen = sum(4, u, 4, v, abt);\n            s1 = adxtail * bdytail;\n            c = splitter * adxtail;\n            ahi = c - (c - adxtail);\n            alo = adxtail - ahi;\n            c = splitter * bdytail;\n            bhi = c - (c - bdytail);\n            blo = bdytail - bhi;\n            s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n            t1 = bdxtail * adytail;\n            c = splitter * bdxtail;\n            ahi = c - (c - bdxtail);\n            alo = bdxtail - ahi;\n            c = splitter * adytail;\n            bhi = c - (c - adytail);\n            blo = adytail - bhi;\n            t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n            _i = s0 - t0;\n            bvirt = s0 - _i;\n            abtt[0] = s0 - (_i + bvirt) + (bvirt - t0);\n            _j = s1 + _i;\n            bvirt = _j - s1;\n            _0 = s1 - (_j - bvirt) + (_i - bvirt);\n            _i = _0 - t1;\n            bvirt = _0 - _i;\n            abtt[1] = _0 - (_i + bvirt) + (bvirt - t1);\n            u3 = _j + _i;\n            bvirt = u3 - _j;\n            abtt[2] = _j - (u3 - bvirt) + (_i - bvirt);\n            abtt[3] = u3;\n            abttlen = 4;\n        } else {\n            abt[0] = 0;\n            abtlen = 1;\n            abtt[0] = 0;\n            abttlen = 1;\n        }\n        if (cdxtail !== 0) {\n            const len = scale(abtlen, abt, cdxtail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cxtablen, cxtab, cdxtail, _16), _16,\n                scale(len, _16c, 2 * cdx, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdxtail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdx, _16), _16,\n                scale(len2, _8, cdxtail, _16b), _16b,\n                scale(len, _16c, cdxtail, _32), _32, _32b, _64), _64);\n\n            if (adytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, bb, cdxtail, _8), _8, adytail, _16), _16);\n            }\n            if (bdytail !== 0) {\n                finlen = finadd(finlen, scale(scale(4, aa, -cdxtail, _8), _8, bdytail, _16), _16);\n            }\n        }\n        if (cdytail !== 0) {\n            const len = scale(abtlen, abt, cdytail, _16c);\n            finlen = finadd(finlen, sum(\n                scale(cytablen, cytab, cdytail, _16), _16,\n                scale(len, _16c, 2 * cdy, _32), _32, _48), _48);\n\n            const len2 = scale(abttlen, abtt, cdytail, _8);\n            finlen = finadd(finlen, sum_three(\n                scale(len2, _8, 2 * cdy, _16), _16,\n                scale(len2, _8, cdytail, _16b), _16b,\n                scale(len, _16c, cdytail, _32), _32, _32b, _64), _64);\n        }\n    }\n\n    return fin[finlen - 1];\n}\n\nexport function incircle(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const bdx = bx - dx;\n    const cdx = cx - dx;\n    const ady = ay - dy;\n    const bdy = by - dy;\n    const cdy = cy - dy;\n\n    const bdxcdy = bdx * cdy;\n    const cdxbdy = cdx * bdy;\n    const alift = adx * adx + ady * ady;\n\n    const cdxady = cdx * ady;\n    const adxcdy = adx * cdy;\n    const blift = bdx * bdx + bdy * bdy;\n\n    const adxbdy = adx * bdy;\n    const bdxady = bdx * ady;\n    const clift = cdx * cdx + cdy * cdy;\n\n    const det =\n        alift * (bdxcdy - cdxbdy) +\n        blift * (cdxady - adxcdy) +\n        clift * (adxbdy - bdxady);\n\n    const permanent =\n        (Math.abs(bdxcdy) + Math.abs(cdxbdy)) * alift +\n        (Math.abs(cdxady) + Math.abs(adxcdy)) * blift +\n        (Math.abs(adxbdy) + Math.abs(bdxady)) * clift;\n\n    const errbound = iccerrboundA * permanent;\n\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return incircleadapt(ax, ay, bx, by, cx, cy, dx, dy, permanent);\n}\n\nexport function incirclefast(ax, ay, bx, by, cx, cy, dx, dy) {\n    const adx = ax - dx;\n    const ady = ay - dy;\n    const bdx = bx - dx;\n    const bdy = by - dy;\n    const cdx = cx - dx;\n    const cdy = cy - dy;\n\n    const abdet = adx * bdy - bdx * ady;\n    const bcdet = bdx * cdy - cdx * bdy;\n    const cadet = cdx * ady - adx * cdy;\n    const alift = adx * adx + ady * ady;\n    const blift = bdx * bdx + bdy * bdy;\n    const clift = cdx * cdx + cdy * cdy;\n\n    return alift * bcdet + blift * cadet + clift * abdet;\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det = (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey);\n    const bexaeyplus = Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey);\n    const cexbeyplus = Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey);\n    const dexceyplus = Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey);\n    const aexdeyplus = Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey);\n    const cexaeyplus = Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey);\n    const dexbeyplus = Math.abs(dexbey);\n    const permanent =\n        ((cexdeyplus + dexceyplus) * bezplus + (dexbeyplus + bexdeyplus) * cezplus + (bexceyplus + cexbeyplus) * dezplus) * alift +\n        ((dexaeyplus + aexdeyplus) * cezplus + (aexceyplus + cexaeyplus) * dezplus + (cexdeyplus + dexceyplus) * aezplus) * blift +\n        ((aexbeyplus + bexaeyplus) * dezplus + (bexdeyplus + dexbeyplus) * aezplus + (dexaeyplus + aexdeyplus) * bezplus) * clift +\n        ((bexceyplus + cexbeyplus) * aezplus + (cexaeyplus + aexceyplus) * bezplus + (aexbeyplus + bexaeyplus) * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n","\nconst EPSILON = Math.pow(2, -52);\nconst EDGE_STACK = new Uint32Array(512);\n\nimport {orient2d} from 'robust-predicates';\n\nexport default class Delaunator {\n\n    static from(points, getX = defaultGetX, getY = defaultGetY) {\n        const n = points.length;\n        const coords = new Float64Array(n * 2);\n\n        for (let i = 0; i < n; i++) {\n            const p = points[i];\n            coords[2 * i] = getX(p);\n            coords[2 * i + 1] = getY(p);\n        }\n\n        return new Delaunator(coords);\n    }\n\n    constructor(coords) {\n        const n = coords.length >> 1;\n        if (n > 0 && typeof coords[0] !== 'number') throw new Error('Expected coords to contain numbers.');\n\n        this.coords = coords;\n\n        // arrays that will store the triangulation graph\n        const maxTriangles = Math.max(2 * n - 5, 0);\n        this._triangles = new Uint32Array(maxTriangles * 3);\n        this._halfedges = new Int32Array(maxTriangles * 3);\n\n        // temporary arrays for tracking the edges of the advancing convex hull\n        this._hashSize = Math.ceil(Math.sqrt(n));\n        this._hullPrev = new Uint32Array(n); // edge to prev edge\n        this._hullNext = new Uint32Array(n); // edge to next edge\n        this._hullTri = new Uint32Array(n); // edge to adjacent triangle\n        this._hullHash = new Int32Array(this._hashSize).fill(-1); // angular edge hash\n\n        // temporary arrays for sorting points\n        this._ids = new Uint32Array(n);\n        this._dists = new Float64Array(n);\n\n        this.update();\n    }\n\n    update() {\n        const {coords, _hullPrev: hullPrev, _hullNext: hullNext, _hullTri: hullTri, _hullHash: hullHash} =  this;\n        const n = coords.length >> 1;\n\n        // populate an array of point indices; calculate input data bbox\n        let minX = Infinity;\n        let minY = Infinity;\n        let maxX = -Infinity;\n        let maxY = -Infinity;\n\n        for (let i = 0; i < n; i++) {\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n            if (x < minX) minX = x;\n            if (y < minY) minY = y;\n            if (x > maxX) maxX = x;\n            if (y > maxY) maxY = y;\n            this._ids[i] = i;\n        }\n        const cx = (minX + maxX) / 2;\n        const cy = (minY + maxY) / 2;\n\n        let minDist = Infinity;\n        let i0, i1, i2;\n\n        // pick a seed point close to the center\n        for (let i = 0; i < n; i++) {\n            const d = dist(cx, cy, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist) {\n                i0 = i;\n                minDist = d;\n            }\n        }\n        const i0x = coords[2 * i0];\n        const i0y = coords[2 * i0 + 1];\n\n        minDist = Infinity;\n\n        // find the point closest to the seed\n        for (let i = 0; i < n; i++) {\n            if (i === i0) continue;\n            const d = dist(i0x, i0y, coords[2 * i], coords[2 * i + 1]);\n            if (d < minDist && d > 0) {\n                i1 = i;\n                minDist = d;\n            }\n        }\n        let i1x = coords[2 * i1];\n        let i1y = coords[2 * i1 + 1];\n\n        let minRadius = Infinity;\n\n        // find the third point which forms the smallest circumcircle with the first two\n        for (let i = 0; i < n; i++) {\n            if (i === i0 || i === i1) continue;\n            const r = circumradius(i0x, i0y, i1x, i1y, coords[2 * i], coords[2 * i + 1]);\n            if (r < minRadius) {\n                i2 = i;\n                minRadius = r;\n            }\n        }\n        let i2x = coords[2 * i2];\n        let i2y = coords[2 * i2 + 1];\n\n        if (minRadius === Infinity) {\n            // order collinear points by dx (or dy if all x are identical)\n            // and return the list as a hull\n            for (let i = 0; i < n; i++) {\n                this._dists[i] = (coords[2 * i] - coords[0]) || (coords[2 * i + 1] - coords[1]);\n            }\n            quicksort(this._ids, this._dists, 0, n - 1);\n            const hull = new Uint32Array(n);\n            let j = 0;\n            for (let i = 0, d0 = -Infinity; i < n; i++) {\n                const id = this._ids[i];\n                if (this._dists[id] > d0) {\n                    hull[j++] = id;\n                    d0 = this._dists[id];\n                }\n            }\n            this.hull = hull.subarray(0, j);\n            this.triangles = new Uint32Array(0);\n            this.halfedges = new Uint32Array(0);\n            return;\n        }\n\n        // swap the order of the seed points for counter-clockwise orientation\n        if (orient2d(i0x, i0y, i1x, i1y, i2x, i2y) < 0) {\n            const i = i1;\n            const x = i1x;\n            const y = i1y;\n            i1 = i2;\n            i1x = i2x;\n            i1y = i2y;\n            i2 = i;\n            i2x = x;\n            i2y = y;\n        }\n\n        const center = circumcenter(i0x, i0y, i1x, i1y, i2x, i2y);\n        this._cx = center.x;\n        this._cy = center.y;\n\n        for (let i = 0; i < n; i++) {\n            this._dists[i] = dist(coords[2 * i], coords[2 * i + 1], center.x, center.y);\n        }\n\n        // sort the points by distance from the seed triangle circumcenter\n        quicksort(this._ids, this._dists, 0, n - 1);\n\n        // set up the seed triangle as the starting hull\n        this._hullStart = i0;\n        let hullSize = 3;\n\n        hullNext[i0] = hullPrev[i2] = i1;\n        hullNext[i1] = hullPrev[i0] = i2;\n        hullNext[i2] = hullPrev[i1] = i0;\n\n        hullTri[i0] = 0;\n        hullTri[i1] = 1;\n        hullTri[i2] = 2;\n\n        hullHash.fill(-1);\n        hullHash[this._hashKey(i0x, i0y)] = i0;\n        hullHash[this._hashKey(i1x, i1y)] = i1;\n        hullHash[this._hashKey(i2x, i2y)] = i2;\n\n        this.trianglesLen = 0;\n        this._addTriangle(i0, i1, i2, -1, -1, -1);\n\n        for (let k = 0, xp, yp; k < this._ids.length; k++) {\n            const i = this._ids[k];\n            const x = coords[2 * i];\n            const y = coords[2 * i + 1];\n\n            // skip near-duplicate points\n            if (k > 0 && Math.abs(x - xp) <= EPSILON && Math.abs(y - yp) <= EPSILON) continue;\n            xp = x;\n            yp = y;\n\n            // skip seed triangle points\n            if (i === i0 || i === i1 || i === i2) continue;\n\n            // find a visible edge on the convex hull using edge hash\n            let start = 0;\n            for (let j = 0, key = this._hashKey(x, y); j < this._hashSize; j++) {\n                start = hullHash[(key + j) % this._hashSize];\n                if (start !== -1 && start !== hullNext[start]) break;\n            }\n\n            start = hullPrev[start];\n            let e = start, q;\n            while (q = hullNext[e], orient2d(x, y, coords[2 * e], coords[2 * e + 1], coords[2 * q], coords[2 * q + 1]) >= 0) {\n                e = q;\n                if (e === start) {\n                    e = -1;\n                    break;\n                }\n            }\n            if (e === -1) continue; // likely a near-duplicate point; skip it\n\n            // add the first triangle from the point\n            let t = this._addTriangle(e, i, hullNext[e], -1, -1, hullTri[e]);\n\n            // recursively flip triangles from the point until they satisfy the Delaunay condition\n            hullTri[i] = this._legalize(t + 2);\n            hullTri[e] = t; // keep track of boundary triangles on the hull\n            hullSize++;\n\n            // walk forward through the hull, adding more triangles and flipping recursively\n            let n = hullNext[e];\n            while (q = hullNext[n], orient2d(x, y, coords[2 * n], coords[2 * n + 1], coords[2 * q], coords[2 * q + 1]) < 0) {\n                t = this._addTriangle(n, i, q, hullTri[i], -1, hullTri[n]);\n                hullTri[i] = this._legalize(t + 2);\n                hullNext[n] = n; // mark as removed\n                hullSize--;\n                n = q;\n            }\n\n            // walk backward from the other side, adding more triangles and flipping\n            if (e === start) {\n                while (q = hullPrev[e], orient2d(x, y, coords[2 * q], coords[2 * q + 1], coords[2 * e], coords[2 * e + 1]) < 0) {\n                    t = this._addTriangle(q, i, e, -1, hullTri[e], hullTri[q]);\n                    this._legalize(t + 2);\n                    hullTri[q] = t;\n                    hullNext[e] = e; // mark as removed\n                    hullSize--;\n                    e = q;\n                }\n            }\n\n            // update the hull indices\n            this._hullStart = hullPrev[i] = e;\n            hullNext[e] = hullPrev[n] = i;\n            hullNext[i] = n;\n\n            // save the two new edges in the hash table\n            hullHash[this._hashKey(x, y)] = i;\n            hullHash[this._hashKey(coords[2 * e], coords[2 * e + 1])] = e;\n        }\n\n        this.hull = new Uint32Array(hullSize);\n        for (let i = 0, e = this._hullStart; i < hullSize; i++) {\n            this.hull[i] = e;\n            e = hullNext[e];\n        }\n\n        // trim typed triangle mesh arrays\n        this.triangles = this._triangles.subarray(0, this.trianglesLen);\n        this.halfedges = this._halfedges.subarray(0, this.trianglesLen);\n    }\n\n    _hashKey(x, y) {\n        return Math.floor(pseudoAngle(x - this._cx, y - this._cy) * this._hashSize) % this._hashSize;\n    }\n\n    _legalize(a) {\n        const {_triangles: triangles, _halfedges: halfedges, coords} = this;\n\n        let i = 0;\n        let ar = 0;\n\n        // recursion eliminated with a fixed-size stack\n        while (true) {\n            const b = halfedges[a];\n\n            /* if the pair of triangles doesn't satisfy the Delaunay condition\n             * (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n             * then do the same check/flip recursively for the new pair of triangles\n             *\n             *           pl                    pl\n             *          /||\\                  /  \\\n             *       al/ || \\bl            al/    \\a\n             *        /  ||  \\              /      \\\n             *       /  a||b  \\    flip    /___ar___\\\n             *     p0\\   ||   /p1   =>   p0\\---bl---/p1\n             *        \\  ||  /              \\      /\n             *       ar\\ || /br             b\\    /br\n             *          \\||/                  \\  /\n             *           pr                    pr\n             */\n            const a0 = a - a % 3;\n            ar = a0 + (a + 2) % 3;\n\n            if (b === -1) { // convex hull edge\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n                continue;\n            }\n\n            const b0 = b - b % 3;\n            const al = a0 + (a + 1) % 3;\n            const bl = b0 + (b + 2) % 3;\n\n            const p0 = triangles[ar];\n            const pr = triangles[a];\n            const pl = triangles[al];\n            const p1 = triangles[bl];\n\n            const illegal = inCircle(\n                coords[2 * p0], coords[2 * p0 + 1],\n                coords[2 * pr], coords[2 * pr + 1],\n                coords[2 * pl], coords[2 * pl + 1],\n                coords[2 * p1], coords[2 * p1 + 1]);\n\n            if (illegal) {\n                triangles[a] = p1;\n                triangles[b] = p0;\n\n                const hbl = halfedges[bl];\n\n                // edge swapped on the other side of the hull (rare); fix the halfedge reference\n                if (hbl === -1) {\n                    let e = this._hullStart;\n                    do {\n                        if (this._hullTri[e] === bl) {\n                            this._hullTri[e] = a;\n                            break;\n                        }\n                        e = this._hullPrev[e];\n                    } while (e !== this._hullStart);\n                }\n                this._link(a, hbl);\n                this._link(b, halfedges[ar]);\n                this._link(ar, bl);\n\n                const br = b0 + (b + 1) % 3;\n\n                // don't worry about hitting the cap: it can only happen on extremely degenerate input\n                if (i < EDGE_STACK.length) {\n                    EDGE_STACK[i++] = br;\n                }\n            } else {\n                if (i === 0) break;\n                a = EDGE_STACK[--i];\n            }\n        }\n\n        return ar;\n    }\n\n    _link(a, b) {\n        this._halfedges[a] = b;\n        if (b !== -1) this._halfedges[b] = a;\n    }\n\n    // add a new triangle given vertex indices and adjacent half-edge ids\n    _addTriangle(i0, i1, i2, a, b, c) {\n        const t = this.trianglesLen;\n\n        this._triangles[t] = i0;\n        this._triangles[t + 1] = i1;\n        this._triangles[t + 2] = i2;\n\n        this._link(t, a);\n        this._link(t + 1, b);\n        this._link(t + 2, c);\n\n        this.trianglesLen += 3;\n\n        return t;\n    }\n}\n\n// monotonically increases with real angle, but doesn't need expensive trigonometry\nfunction pseudoAngle(dx, dy) {\n    const p = dx / (Math.abs(dx) + Math.abs(dy));\n    return (dy > 0 ? 3 - p : 1 + p) / 4; // [0..1]\n}\n\nfunction dist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n    const dx = ax - px;\n    const dy = ay - py;\n    const ex = bx - px;\n    const ey = by - py;\n    const fx = cx - px;\n    const fy = cy - py;\n\n    const ap = dx * dx + dy * dy;\n    const bp = ex * ex + ey * ey;\n    const cp = fx * fx + fy * fy;\n\n    return dx * (ey * cp - bp * fy) -\n           dy * (ex * cp - bp * fx) +\n           ap * (ex * fy - ey * fx) < 0;\n}\n\nfunction circumradius(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = (ey * bl - dy * cl) * d;\n    const y = (dx * cl - ex * bl) * d;\n\n    return x * x + y * y;\n}\n\nfunction circumcenter(ax, ay, bx, by, cx, cy) {\n    const dx = bx - ax;\n    const dy = by - ay;\n    const ex = cx - ax;\n    const ey = cy - ay;\n\n    const bl = dx * dx + dy * dy;\n    const cl = ex * ex + ey * ey;\n    const d = 0.5 / (dx * ey - dy * ex);\n\n    const x = ax + (ey * bl - dy * cl) * d;\n    const y = ay + (dx * cl - ex * bl) * d;\n\n    return {x, y};\n}\n\nfunction quicksort(ids, dists, left, right) {\n    if (right - left <= 20) {\n        for (let i = left + 1; i <= right; i++) {\n            const temp = ids[i];\n            const tempDist = dists[temp];\n            let j = i - 1;\n            while (j >= left && dists[ids[j]] > tempDist) ids[j + 1] = ids[j--];\n            ids[j + 1] = temp;\n        }\n    } else {\n        const median = (left + right) >> 1;\n        let i = left + 1;\n        let j = right;\n        swap(ids, median, i);\n        if (dists[ids[left]] > dists[ids[right]]) swap(ids, left, right);\n        if (dists[ids[i]] > dists[ids[right]]) swap(ids, i, right);\n        if (dists[ids[left]] > dists[ids[i]]) swap(ids, left, i);\n\n        const temp = ids[i];\n        const tempDist = dists[temp];\n        while (true) {\n            do i++; while (dists[ids[i]] < tempDist);\n            do j--; while (dists[ids[j]] > tempDist);\n            if (j < i) break;\n            swap(ids, i, j);\n        }\n        ids[left + 1] = ids[j];\n        ids[j] = temp;\n\n        if (right - i + 1 >= j - left) {\n            quicksort(ids, dists, i, right);\n            quicksort(ids, dists, left, j - 1);\n        } else {\n            quicksort(ids, dists, left, j - 1);\n            quicksort(ids, dists, i, right);\n        }\n    }\n}\n\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultGetX(p) {\n    return p[0];\n}\nfunction defaultGetY(p) {\n    return p[1];\n}\n","import seedrandom from 'seedrandom';\nimport Delaunator from \"delaunator\";\nimport chroma from 'chroma-js';\n\nconst ColorStyleDefault = 'default';\nconst ColorStyleJitter = 'jitter';\nconst ColorStyleShadows = 'shadows';\n\nconst defaultConfig = {\n    //size of initial points mesh (horizontal and vertical)\n    meshStepX: 35,\n    meshStepY: 35,\n\n    //random seed (same values gives same results)\n    seed: 123456,\n\n    //max point position deviation, percent\n    variance: 0.05,\n\n    //mesh mode colors\n    meshColorStroke: 'black',\n    meshColorFill: 'white',\n\n    //color palettes: arrays of colors for horizontal and vertical scales\n    //default ColorBrewer colors available: https://github.com/gka/chroma.js/blob/main/src/colors/colorbrewer.js\n    //use them with TrianglePattern.colors property, for example:\n    //colorsX: TrianglePattern.colors.PuBuGn\n    colorsX: chroma.brewer.Oranges,\n    colorsY: chroma.brewer.Purples,\n\n    //mix ratio between horizontal and vertical scales\n    colorMixRatio: 0.5,\n\n    //use some color styles from TrianglePattern.styles property\n    colorStyle: ColorStyleDefault,\n    colorStyleJitterIntensity: 0.15,\n\n    colorStyleShadowsIntensity: 0.85,\n    colorMode: 'lrgb',\n};\n\nwindow.TrianglePattern = function(patternConfig) {\n    const config = Object.assign({}, defaultConfig, patternConfig);\n    const rng = seedrandom(config.seed);\n\n    if (!config.width) {\n        throw new Error(\"width required\");\n    }\n    if (!config.height) {\n        throw new Error(\"height required\");\n    }\n\n    const points = generatePoints(config, rng);\n    const triangles = generateTriangles(points);\n    const coloredTriangles = colorTriangles(config, rng, triangles);\n\n    return {\n        draw(canvasCtx) {\n            for (let triangle of coloredTriangles) {\n                canvasCtx.fillStyle = triangle.color;\n                canvasCtx.strokeStyle = triangle.color;\n                drawTriangleOnCanvas(canvasCtx, triangle);\n            }\n        },\n\n        drawMesh(canvasCtx) {\n            canvasCtx.fillStyle = config.meshColorFill;\n            canvasCtx.strokeStyle = config.meshColorStroke;\n\n            for (let triangle of triangles) {\n                drawTriangleOnCanvas(canvasCtx, triangle);\n            }\n        },\n\n        svg() {\n            const polygons = [];\n\n            for (let triangle of coloredTriangles) {\n                const p0 = `${triangle.p0.x},${triangle.p0.y}`;\n                const p1 = `${triangle.p1.x},${triangle.p1.y}`;\n                const p2 = `${triangle.p2.x},${triangle.p2.y}`;\n                const points = `${p0} ${p1} ${p2}`;\n                polygons.push(`<polygon points=\"${points}\" fill=\"${triangle.color}\" stroke=\"${triangle.color}\" />`);\n            }\n\n            return `<svg viewBox=\"0 0 ${config.width} ${config.height}\" xmlns=\"http://www.w3.org/2000/svg\">${polygons.join('')}</svg>`;\n        },\n    };\n};\n\nwindow.TrianglePattern.colors = chroma.brewer;\n\nwindow.TrianglePattern.styles = {\n    default: ColorStyleDefault,\n    jitter: ColorStyleJitter,\n    shadows: ColorStyleShadows,\n};\n\n///////////////////////////////////////////////////////////////////////////////\n\nfunction generatePoints(config, rng) {\n    const points = [];\n\n    for (let x = config.meshStepX; x < config.width; x += config.meshStepX) {\n        for (let y = config.meshStepY; y < config.height; y += config.meshStepY) {\n            points.push({x, y});\n        }\n    }\n\n    for (let pointIdx = 0; pointIdx < points.length; pointIdx++) {\n        let newX = points[pointIdx].x + Math.floor(config.variance * (rng() - 0.5) * config.width);\n        let newY = points[pointIdx].y + Math.floor(config.variance * (rng() - 0.5) * config.height);\n        points[pointIdx] = {\n            x: Math.min(config.width, Math.max(0, newX)),\n            y: Math.min(config.height, Math.max(0, newY)),\n        };\n    }\n\n    for (let x = config.meshStepX; x < config.width; x += config.meshStepX) {\n        points.push({\n            x,\n            y: 0,\n        });\n        points.push({\n            x,\n            y: config.height,\n        });\n    }\n    for (let y = config.meshStepY; y < config.height; y += config.meshStepY) {\n        points.push({\n            x: 0,\n            y,\n        });\n        points.push({\n            x: config.width,\n            y,\n        });\n    }\n    points.push({\n        x: 0,\n        y: 0,\n    });\n    points.push({\n        x: 0,\n        y: config.height,\n    });\n    points.push({\n        x: config.width,\n        y: 0,\n    });\n    points.push({\n        x: config.width,\n        y: config.height,\n    });\n\n    return points;\n}\n\nfunction generateTriangles(points) {\n    const coordinates = [];\n    for (let point of points) {\n        coordinates.push(point.x);\n        coordinates.push(point.y);\n    }\n\n    const delaunay = new Delaunator(coordinates);\n\n    const triangles = [];\n    for (let pointIdx = 0; pointIdx < delaunay.triangles.length; pointIdx += 3) {\n        triangles.push({\n            p0: points[delaunay.triangles[pointIdx]],\n            p1: points[delaunay.triangles[pointIdx+1]],\n            p2: points[delaunay.triangles[pointIdx+2]],\n        });\n    }\n\n    return triangles;\n}\n\nfunction colorTriangles(config, rng, triangles) {\n    const scaleX = chroma.scale(config.colorsX)\n        .mode(config.colorMode)\n        .domain([0, config.width]);\n\n    const scaleY = chroma.scale(config.colorsY)\n        .mode(config.colorMode)\n        .domain([0, config.height]);\n\n    const coloredTriangles = [];\n\n    for (let currentTriangle of triangles) {\n        const triangle = Object.assign({}, currentTriangle);\n\n        const centroidX = (triangle.p0.x + triangle.p1.x + triangle.p2.x) / 3.0;\n        const centroidY = (triangle.p0.y + triangle.p1.y + triangle.p2.y) / 3.0;\n\n        const colorX = calculateColor(config, rng, scaleX, centroidX);\n        const colorY = calculateColor(config, rng, scaleY, centroidY);\n        const color = chroma.mix(colorX, colorY, config.colorMixRatio, config.colorMode);\n\n        triangle.color = color.hex();\n\n        coloredTriangles.push(triangle);\n    }\n\n    return coloredTriangles;\n}\n\nfunction calculateColor(config, rng, colorScale, value) {\n    switch (config.colorStyle) {\n        case ColorStyleJitter: {\n            const offset = (rng() - 0.5) * config.colorStyleJitterIntensity;\n            return colorScale(value + value * offset);\n        }\n\n        case ColorStyleShadows: {\n            const color = colorScale(value);\n            return color.darken(config.colorStyleShadowsIntensity * rng());\n        }\n\n        default:\n            return colorScale(value);\n    }\n}\n\nfunction drawTriangleOnCanvas(ctx, triangle) {\n    ctx.beginPath();\n    ctx.moveTo(triangle.p0.x, triangle.p0.y);\n    ctx.lineTo(triangle.p1.x, triangle.p1.y);\n    ctx.lineTo(triangle.p2.x, triangle.p2.y);\n    ctx.closePath();\n    ctx.fill();\n    ctx.stroke();\n}\n"],"names":["alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","module","exports","global","define","Alea","seed","n","me","this","mash","data","String","i","length","h","charCodeAt","next","t","s0","c","s1","s2","copy","f","impl","opts","xg","state","prng","int32","double","quick","XorGen","strseed","b","d","a","Math","floor","k","result","x","y","z","w","v","X","j","limit","max","init","slice","Date","push","pool","math","nodecrypto","width","startdenom","pow","significance","overflow","mask","seedrandom","options","callback","key","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","e","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","s","count","r","obj","depth","prop","typ","smear","stringseed","fromCharCode","apply","random","ex","self","limit$2","min","limit$1","classToType","i$1","list$1","name","toLowerCase","type$p","Object","prototype","toString","call","type$o","type$n","PI$2","PI","utils","clip_rgb","rgb","_clipped","_unclipped","type","unpack","args","keyOrder","Array","split","filter","undefined","map","last","l","TWOPI","PITHIRD","DEG2RAD","RAD2DEG","input$h","format","autodetect","last$3","clip_rgb$2","type$m","_input","Color$D","len","arguments","constructor","mode","sorted","sort","p","list","chk","test","Error","_rgb","hex","join","Color_1","chroma$k","Function","bind","Color","concat","version","chroma_1","unpack$A","max$2","rgb2cmyk_1","ref","unpack$z","cmyk2rgb_1","m","alpha","chroma$j","Color$C","input$g","unpack$y","type$l","rgb2cmyk","cmyk","unpack$x","last$2","rnd","round","hsl2css_1","hsla","unpack$w","rgb2hsl_1","Number","NaN","unpack$v","last$1","hsl2css","rgb2hsl$2","round$6","rgb2css_1","rgba","substr","unpack$u","round$5","hsl2rgb_1","assign","t3","t2","t1","h_","hsl2rgb","input$f","RE_RGB","RE_RGBA","RE_RGB_PCT","RE_RGBA_PCT","RE_HSL","RE_HSLA","round$4","css2rgb$1","css","trim","named","match","rgb$1","rgb$2","i$2","rgb$3","i$3","hsl","rgb$4","hsl$1","rgb$5","chroma$i","Color$B","input$e","type$k","rgb2css","css2rgb","rest","Color$A","chroma$h","unpack$t","gl","unpack$s","rgb2hcg_1","delta","_g","unpack$r","floor$3","hcg2rgb_1","assign$1","assign$2","assign$3","assign$4","assign$5","_c","q","unpack$q","type$j","chroma$g","Color$z","input$c","rgb2hcg","hcg","unpack$p","round$3","rgb2hex_1","str","hxa","RE_HEX","RE_HEXA","hex2rgb_1","u","parseInt","u$1","chroma$f","Color$y","type$i","input$b","rgb2hex$1","indexOf","unpack$o","TWOPI$2","min$2","sqrt$4","sqrt","acos","rgb2hsi_1","min_","unpack$n","TWOPI$1","cos$4","cos","hsi2rgb_1","isNaN","unpack$m","type$h","chroma$e","Color$x","input$a","rgb2hsi","hsi","unpack$l","type$g","chroma$d","Color$w","input$9","rgb2hsl$1","unpack$k","min$1","max$1","rgb2hsv$1","max_","unpack$j","floor$2","hsv2rgb_1","unpack$i","type$f","chroma$c","Color$v","input$8","rgb2hsv","hsv","labConstants","Kn","Xn","Yn","Zn","t0","LAB_CONSTANTS$3","unpack$h","pow$a","rgb_xyz","xyz_lab","rgb2xyz","rgb2lab_1","ref$1","LAB_CONSTANTS$2","unpack$g","pow$9","xyz_rgb","lab_xyz","lab2rgb_1","unpack$f","type$e","chroma$b","Color$u","input$7","rgb2lab$1","lab","unpack$e","sqrt$3","atan2$2","atan2","round$2","lab2lch_1","unpack$d","rgb2lab","lab2lch$1","rgb2lch_1","b_","unpack$c","sin$3","sin","cos$3","lch2lab_1","unpack$b","lch2lab$1","lab2rgb","lch2rgb_1","L","unpack$a","lch2rgb","hcl2rgb_1","hcl","reverse","unpack$9","type$d","chroma$a","Color$t","input$6","rgb2lch","lch","forEach","w3cx11_1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","input$5","type$c","w3cx11","hex2rgb","rgb2hex","keys","unpack$8","rgb2num_1","type$b","num2rgb_1","num","chroma$9","Color$r","input$4","type$a","rgb2num","chroma$8","Color$q","input$3","unpack$7","type$9","round$1","log$1","log","temperature2rgb_1","kelvin","temp","temperature2rgb","unpack$6","chroma$7","Color$p","input$2","rgb2temperature","minTemp","maxTemp","eps","temperature","unpack$5","cbrt","pow$8","sign$1","sign","rgb2oklab_1","rgb2lrgb","lr","lg","lb","abs","unpack$4","pow$7","oklab2rgb_1","lrgb2rgb","unpack$3","type$8","chroma$6","Color$o","input$1","rgb2oklab$1","oklab","unpack$2","rgb2oklab","lab2lch","rgb2oklch_1","unpack$1","lch2lab","oklab2rgb","oklch2rgb_1","type$7","chroma$5","Color$n","input","rgb2oklch","oklch","Color$m","type$6","mutate","clipped","Color$k","LAB_CONSTANTS$1","darken","amount","brighten","darker","brighter","get","mc","channel","src","Color$i","type$5","pow$6","luminance","lum","cur_lum","max_iter","low","high","mid","interpolate","lm","rgb2luminance","luminance_x","interpolator$1","Color$h","type$4","interpolator","mix$1","col1","col2","Color$g","mix","Color$f","premultiply","Color$e","LAB_CONSTANTS","saturate","desaturate","Color$d","type$3","set","value","charAt","Color$c","xyz0","xyz1","Color$b","sqrt$2","pow$5","lrgb","x1","y1","z1","x2","y2","z2","Color$a","Color$9","_hsx","hue0","hue1","sat0","sat1","lbv0","lbv1","sat","hue","lbv","interpolate_hsx$5","Color$8","c1","c2","interpolate_hsx$4","interpolate_hsx$3","interpolate_hsx$2","interpolate_hsx$1","Color$7","interpolate_hsx","Color$6","clip_rgb$1","pow$4","sqrt$1","PI$1","cos$2","sin$2","atan2$1","_average_lrgb","colors","weights","xyz","col","chroma$4","type$2","pow$3","scale$2","_mode","_nacol","_spread","_domain","_pos","_padding","_classes","_colors","_out","_min","_max","_correctLightness","_colorCache","_useCache","_gamma","setColors","brewer","c$1","resetCache","tMapLightness","tMapDomain","getColor","val","bypassMap","getClass","classes","analyze","limits","domain","from","tOut","tBreaks","every","_m","range","_o","spread","correctLightness","L0","L1","pol","L_actual","L_ideal","L_diff","padding","numColors","dm","dd","__range__","samples","end","asc","cache","gamma","nodata","left","right","inclusive","ascending","Color$5","scale$1","chroma$3","blend","bottom","top","blend_f","c0","each","normal","multiply","overlay","lighten","dodge","burn","blend_1","type$1","pow$2","sin$1","cos$1","chroma$2","Color$4","floor$1","pow$1","abs$1","MAX_VALUE","sum","values","min_log","LOG10E","max_log","pb","pr","cluster","assignments","clusterSizes","repeat","nb_iters","centroids","i$4","mindist","best","j$1","dist","newCentroids","j$2","i$5","j$3","j$4","kClusters","j$5","i$6","tmpKMeansBreaks","j$6","i$7","analyze_1","Color$3","Color$2","exp","Color$1","chroma$1","scale","scales","cool","hot","colorbrewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","colorbrewer_1","chroma","average","reduce","first","shift","cnt","dx","dy","A","ci","xyz2","A$1","bezier","I","lab0","lab1","lab2","lab3","RangeError","labs","row","newrow","binom_row","el","cubehelix","start","rotations","lightness","dl","dh","fract","amp","cos_a","sin_a","code","contrast","l1","l2","deltaE","Kl","Kc","Kh","rad2deg","rad","deg2rad","deg","a1","b1","L2","a2","b2","avgL","avgC","G","a1p","a2p","C1p","C2p","avgCp","arctan1","arctan2","h1p","h2p","avgHp","T","deltaHp","deltaL","deltaCp","sl","sc","sh","deltaTheta","Rt","distance","sum_sq","valid","factory","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","amdD","amdO","getter","__esModule","definition","o","defineProperty","enumerable","hasOwnProperty","nmd","paths","children","elen","flen","Q","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","Float64Array","B","C1","C2","D","orient2d","ax","ay","bx","by","cx","cy","detleft","detright","det","detsum","acxtail","acytail","bcxtail","bcytail","ahi","alo","bhi","blo","_i","_j","_0","u3","acx","bcx","acy","bcy","errbound","C1len","C2len","Dlen","orient2dadapt","EPSILON","EDGE_STACK","Uint32Array","Delaunator","static","points","getX","defaultGetX","getY","defaultGetY","coords","maxTriangles","_triangles","_halfedges","Int32Array","_hashSize","ceil","_hullPrev","_hullNext","_hullTri","_hullHash","fill","_ids","_dists","update","hullPrev","hullNext","hullTri","hullHash","minX","Infinity","minY","maxX","maxY","i0","i1","i2","minDist","i0x","i0y","i1x","i1y","minRadius","circumradius","i2x","i2y","quicksort","hull","d0","subarray","triangles","halfedges","center","ey","bl","cl","circumcenter","_cx","_cy","_hullStart","hullSize","_hashKey","trianglesLen","_addTriangle","xp","yp","_legalize","pseudoAngle","ar","a0","b0","al","p0","pl","p1","inCircle","hbl","_link","br","px","py","fx","fy","bp","cp","ids","dists","tempDist","swap","arr","tmp","ColorStyleDefault","ColorStyleJitter","ColorStyleShadows","defaultConfig","meshStepX","meshStepY","variance","meshColorStroke","meshColorFill","colorsX","colorsY","colorMixRatio","colorStyle","colorStyleJitterIntensity","colorStyleShadowsIntensity","colorMode","calculateColor","config","rng","colorScale","drawTriangleOnCanvas","ctx","triangle","beginPath","moveTo","lineTo","p2","closePath","stroke","window","TrianglePattern","patternConfig","height","pointIdx","newX","newY","generatePoints","coordinates","point","delaunay","generateTriangles","coloredTriangles","scaleX","scaleY","currentTriangle","centroidX","centroidY","colorX","colorY","color","colorTriangles","draw","canvasCtx","fillStyle","strokeStyle","drawMesh","svg","polygons","styles","default","jitter","shadows"],"sourceRoot":""}